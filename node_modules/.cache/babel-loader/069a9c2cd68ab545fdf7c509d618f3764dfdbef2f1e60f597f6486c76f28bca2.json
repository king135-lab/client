{"ast":null,"code":"// src/components/GamePageCreator.js\nimport React,{useState,useEffect}from'react';import{useParams,useNavigate}from'react-router-dom';import axios from'axios';import NumberHelper from'./NumberHelper';import{ReactComponent as ConfettiIcon}from'../assets/confetti.svg';import'./GamePageCreator.css';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const GamePageCreator=()=>{var _gameData$guesses,_gameData$guesses2;const{gameId}=useParams();const navigate=useNavigate();const[gameData,setGameData]=useState(null);const[guess,setGuess]=useState('');const[guessMessage,setGuessMessage]=useState('');const[turnTrigger,setTurnTrigger]=useState(null);const[gameEnded,setGameEnded]=useState(false);// Poll game data every 3 seconds\nuseEffect(()=>{const interval=setInterval(async()=>{try{const res=await axios.get(\"http://localhost:5000/api/games/\".concat(gameId));setGameData(res.data);setTurnTrigger(res.data.turn);// update trigger when turn changes\n}catch(err){console.error('Error fetching game data:',err);}},3000);return()=>clearInterval(interval);},[gameId]);if(!gameData)return/*#__PURE__*/_jsx(\"p\",{children:\"Loading game data...\"});// For the creator, assume playerName is the first element.\nconst playerName=gameData.players[0];const myGuesses=((_gameData$guesses=gameData.guesses)!==null&&_gameData$guesses!==void 0?_gameData$guesses:[]).filter(g=>g.player===playerName);const oppGuesses=((_gameData$guesses2=gameData.guesses)!==null&&_gameData$guesses2!==void 0?_gameData$guesses2:[]).filter(g=>g.player===gameData.players[1]);const myTurn=gameData.turn===playerName;const finished=gameData.status==='finished';const handleSubmitGuess=async e=>{e.preventDefault();if(!guess){alert('Please enter a guess.');return;}if(guess.length!==4||new Set(guess).size!==4){setGuessMessage('Please enter exactly 4 unique digits.');return;}try{const res=await axios.post('http://localhost:5000/api/games/guess',{gameId,player:playerName,guess});setGuessMessage(res.data.message);setGuess('');}catch(err){var _err$response,_err$response$data;console.error('Error submitting guess:',err);setGuessMessage(((_err$response=err.response)===null||_err$response===void 0?void 0:(_err$response$data=_err$response.data)===null||_err$response$data===void 0?void 0:_err$response$data.message)||'Error submitting guess');}};// Quit Game: call the quitGame endpoint to end the game\nconst handleQuitGame=async()=>{const confirmation=window.confirm('Are you sure you want to end the game? You will be counted as the loser.');if(confirmation){try{await axios.post('http://localhost:5000/api/games/quitGame',{gameId,player:playerName});setGameEnded(true);}catch(err){console.error('Error ending the game:',err);}}};let outcomeMessage='';if(finished){if(gameData.winner===\"draw\"){outcomeMessage=\"It's a draw!\";}else if(gameData.winner===playerName){outcomeMessage=\"Congratulations! You win! Confetti!!!\";}else{outcomeMessage=\"You lost! Better luck next time!\";}}const handleResetGame=async()=>{try{await axios.post('http://localhost:5000/api/games/reset',{gameId});navigate('/');}catch(err){console.error('Error resetting game:',err);}};return/*#__PURE__*/_jsxs(\"div\",{className:\"game-container creator-view\",children:[/*#__PURE__*/_jsxs(\"nav\",{className:\"nav-bar\",children:[/*#__PURE__*/_jsxs(\"h1\",{className:\"logo\",children:[\"NUMBER\",/*#__PURE__*/_jsx(\"span\",{className:\"logo-accent\",children:\"POSITION\"})]}),!finished&&/*#__PURE__*/_jsx(\"button\",{onClick:handleQuitGame,className:\"btn quit-game-btn\",children:\"Quit Game\"})]}),/*#__PURE__*/_jsxs(\"main\",{className:\"game-main\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"game-header\",children:[/*#__PURE__*/_jsxs(\"h2\",{className:\"game-title\",children:[\"Game Room: \",/*#__PURE__*/_jsx(\"span\",{className:\"code\",children:gameId})]}),/*#__PURE__*/_jsx(\"div\",{className:\"status-badge\",children:finished?'Game Over':myTurn?'Your Turn':\"Opponent's Turn\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"secret-code-display\",children:[\"Your Secret Code: \",/*#__PURE__*/_jsx(\"span\",{className:\"code\",children:gameData.secretCode1})]}),finished&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"outcome-banner\",children:[gameData.winner===\"draw\"?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"span\",{children:\"\\uD83E\\uDD1D\"}),\" \",outcomeMessage]}):gameData.winner===playerName?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(ConfettiIcon,{className:\"confetti\"}),\" \",outcomeMessage]}):/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"span\",{children:\"\\uD83D\\uDC94\"}),\" \",outcomeMessage]}),/*#__PURE__*/_jsx(\"button\",{className:\"btn home-btn\",onClick:()=>navigate('/'),children:\"Return to Home\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"secret-code-reveal\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Secret Codes Revealed\"}),/*#__PURE__*/_jsxs(\"p\",{children:[gameData.players[0],\"'s Secret Code: \",/*#__PURE__*/_jsx(\"span\",{className:\"code\",children:gameData.secretCode1})]}),/*#__PURE__*/_jsxs(\"p\",{children:[gameData.players[1],\"'s Secret Code: \",/*#__PURE__*/_jsx(\"span\",{className:\"code\",children:gameData.secretCode2})]})]})]}),!finished&&!gameEnded&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"guess-history-container\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"guess-column\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"column-title\",children:\"Your Guesses\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"guess-table\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"table-header\",children:[/*#__PURE__*/_jsx(\"div\",{children:\"Guess\"}),/*#__PURE__*/_jsx(\"div\",{children:\"Numbers Correct\"}),/*#__PURE__*/_jsx(\"div\",{children:\"Positions Correct\"})]}),myGuesses.length===0?/*#__PURE__*/_jsx(\"div\",{className:\"empty-state\",children:\"No guesses yet\"}):myGuesses.map((g,index)=>/*#__PURE__*/_jsxs(\"div\",{className:\"table-row\",children:[/*#__PURE__*/_jsx(\"div\",{children:g.guess}),/*#__PURE__*/_jsx(\"div\",{className:\"correct-count\",children:g.numbersCorrect}),/*#__PURE__*/_jsx(\"div\",{className:\"correct-count\",children:g.positionsCorrect})]},index))]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"guess-column\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"column-title\",children:\"Opponent's Guesses\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"guess-table\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"table-header\",children:[/*#__PURE__*/_jsx(\"div\",{children:\"Guess\"}),/*#__PURE__*/_jsx(\"div\",{children:\"Numbers Correct\"}),/*#__PURE__*/_jsx(\"div\",{children:\"Positions Correct\"})]}),oppGuesses.length===0?/*#__PURE__*/_jsx(\"div\",{className:\"empty-state\",children:\"No guesses yet\"}):oppGuesses.map((g,index)=>/*#__PURE__*/_jsxs(\"div\",{className:\"table-row\",children:[/*#__PURE__*/_jsx(\"div\",{children:g.guess}),/*#__PURE__*/_jsx(\"div\",{className:\"correct-count\",children:g.numbersCorrect}),/*#__PURE__*/_jsx(\"div\",{className:\"correct-count\",children:g.positionsCorrect})]},index))]})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"guess-input-section\",children:[myTurn?/*#__PURE__*/_jsxs(\"form\",{className:\"guess-form\",onSubmit:handleSubmitGuess,children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",className:\"guess-input\",placeholder:\"Enter your guess\",value:guess,onChange:e=>setGuess(e.target.value),maxLength:\"4\",pattern:\"\\\\d{4}\"}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:\"btn submit-guess-btn\",disabled:!guess||guess.length!==4||new Set(guess).size!==4,children:\"Submit Guess\"})]}):/*#__PURE__*/_jsxs(\"p\",{className:\"waiting-turn\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"pulse-dot\"}),\"Waiting for your turn...\"]}),/*#__PURE__*/_jsx(NumberHelper,{}),guessMessage&&/*#__PURE__*/_jsx(\"div\",{className:\"guess-feedback\",children:guessMessage})]})]})]})]});};export default GamePageCreator;","map":{"version":3,"names":["React","useState","useEffect","useParams","useNavigate","axios","NumberHelper","ReactComponent","ConfettiIcon","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","GamePageCreator","_gameData$guesses","_gameData$guesses2","gameId","navigate","gameData","setGameData","guess","setGuess","guessMessage","setGuessMessage","turnTrigger","setTurnTrigger","gameEnded","setGameEnded","interval","setInterval","res","get","concat","data","turn","err","console","error","clearInterval","children","playerName","players","myGuesses","guesses","filter","g","player","oppGuesses","myTurn","finished","status","handleSubmitGuess","e","preventDefault","alert","length","Set","size","post","message","_err$response","_err$response$data","response","handleQuitGame","confirmation","window","confirm","outcomeMessage","winner","handleResetGame","className","onClick","secretCode1","secretCode2","map","index","numbersCorrect","positionsCorrect","onSubmit","type","placeholder","value","onChange","target","maxLength","pattern","disabled"],"sources":["C:/Users/ademm/Documents/Projects/number-position-game/client/src/components/GamePageCreator.js"],"sourcesContent":["// src/components/GamePageCreator.js\r\nimport React, { useState, useEffect } from 'react';\r\nimport { useParams, useNavigate } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport NumberHelper from './NumberHelper';\r\nimport { ReactComponent as ConfettiIcon } from '../assets/confetti.svg';\r\nimport './GamePageCreator.css';\r\n\r\nconst GamePageCreator = () => {\r\n    const { gameId } = useParams();\r\n    const navigate = useNavigate();\r\n    const [gameData, setGameData] = useState(null);\r\n    const [guess, setGuess] = useState('');\r\n    const [guessMessage, setGuessMessage] = useState('');\r\n    const [turnTrigger, setTurnTrigger] = useState(null);\r\n    const [gameEnded, setGameEnded] = useState(false);\r\n\r\n    // Poll game data every 3 seconds\r\n    useEffect(() => {\r\n        const interval = setInterval(async () => {\r\n            try {\r\n                const res = await axios.get(`http://localhost:5000/api/games/${gameId}`);\r\n                setGameData(res.data);\r\n                setTurnTrigger(res.data.turn); // update trigger when turn changes\r\n            } catch (err) {\r\n                console.error('Error fetching game data:', err);\r\n            }\r\n        }, 3000);\r\n        return () => clearInterval(interval);\r\n    }, [gameId]);\r\n\r\n    if (!gameData) return <p>Loading game data...</p>;\r\n\r\n    // For the creator, assume playerName is the first element.\r\n    const playerName = gameData.players[0];\r\n    const myGuesses = (gameData.guesses ?? []).filter(g => g.player === playerName);\r\n    const oppGuesses = (gameData.guesses ?? []).filter(g => g.player === gameData.players[1]);\r\n    const myTurn = gameData.turn === playerName;\r\n    const finished = gameData.status === 'finished';\r\n\r\n    const handleSubmitGuess = async (e) => {\r\n        e.preventDefault();\r\n        if (!guess) {\r\n            alert('Please enter a guess.');\r\n            return;\r\n        }\r\n        if (guess.length !== 4 || new Set(guess).size !== 4) {\r\n            setGuessMessage('Please enter exactly 4 unique digits.');\r\n            return;\r\n        }\r\n        try {\r\n            const res = await axios.post('http://localhost:5000/api/games/guess', { gameId, player: playerName, guess });\r\n            setGuessMessage(res.data.message);\r\n            setGuess('');\r\n        } catch (err) {\r\n            console.error('Error submitting guess:', err);\r\n            setGuessMessage(err.response?.data?.message || 'Error submitting guess');\r\n        }\r\n    };\r\n\r\n    // Quit Game: call the quitGame endpoint to end the game\r\n    const handleQuitGame = async () => {\r\n        const confirmation = window.confirm('Are you sure you want to end the game? You will be counted as the loser.');\r\n        if (confirmation) {\r\n            try {\r\n                await axios.post('http://localhost:5000/api/games/quitGame', { gameId, player: playerName });\r\n                setGameEnded(true);\r\n            } catch (err) {\r\n                console.error('Error ending the game:', err);\r\n            }\r\n        }\r\n    };\r\n\r\n    let outcomeMessage = '';\r\n    if (finished) {\r\n        if (gameData.winner === \"draw\") {\r\n            outcomeMessage = \"It's a draw!\";\r\n        } else if (gameData.winner === playerName) {\r\n            outcomeMessage = \"Congratulations! You win! Confetti!!!\";\r\n        } else {\r\n            outcomeMessage = \"You lost! Better luck next time!\";\r\n        }\r\n    }\r\n\r\n    const handleResetGame = async () => {\r\n        try {\r\n            await axios.post('http://localhost:5000/api/games/reset', { gameId });\r\n            navigate('/');\r\n        } catch (err) {\r\n            console.error('Error resetting game:', err);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"game-container creator-view\">\r\n            <nav className=\"nav-bar\">\r\n                <h1 className=\"logo\">\r\n                    NUMBER<span className=\"logo-accent\">POSITION</span>\r\n                </h1>\r\n                {!finished && (\r\n                    <button onClick={handleQuitGame} className=\"btn quit-game-btn\">\r\n                        Quit Game\r\n                    </button>\r\n                )}\r\n            </nav>\r\n\r\n            <main className=\"game-main\">\r\n                <div className=\"game-header\">\r\n                    <h2 className=\"game-title\">\r\n                        Game Room: <span className=\"code\">{gameId}</span>\r\n                    </h2>\r\n                    <div className=\"status-badge\">\r\n                        {finished ? 'Game Over' : myTurn ? 'Your Turn' : \"Opponent's Turn\"}\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"secret-code-display\">\r\n                    Your Secret Code: <span className=\"code\">{gameData.secretCode1}</span>\r\n                </div>\r\n\r\n                {finished && (\r\n                    <>\r\n                        <div className=\"outcome-banner\">\r\n                            {gameData.winner === \"draw\" ? (\r\n                                <><span>🤝</span> {outcomeMessage}</>\r\n                            ) : gameData.winner === playerName ? (\r\n                                <><ConfettiIcon className=\"confetti\" /> {outcomeMessage}</>\r\n                            ) : (\r\n                                <><span>💔</span> {outcomeMessage}</>\r\n                            )}\r\n                            <button className=\"btn home-btn\" onClick={() => navigate('/')}>\r\n                                Return to Home\r\n                            </button>\r\n                        </div>\r\n                        {/* Reveal both secret codes once the game is finished */}\r\n                        <div className=\"secret-code-reveal\">\r\n                            <h3>Secret Codes Revealed</h3>\r\n                            <p>\r\n                                {gameData.players[0]}'s Secret Code: <span className=\"code\">{gameData.secretCode1}</span>\r\n                            </p>\r\n                            <p>\r\n                                {gameData.players[1]}'s Secret Code: <span className=\"code\">{gameData.secretCode2}</span>\r\n                            </p>\r\n                        </div>\r\n                    </>\r\n                )}\r\n\r\n                {!finished && !gameEnded && (\r\n                    <>\r\n                        <div className=\"guess-history-container\">\r\n                            <div className=\"guess-column\">\r\n                                <h3 className=\"column-title\">Your Guesses</h3>\r\n                                <div className=\"guess-table\">\r\n                                    <div className=\"table-header\">\r\n                                        <div>Guess</div>\r\n                                        <div>Numbers Correct</div>\r\n                                        <div>Positions Correct</div>\r\n                                    </div>\r\n                                    {myGuesses.length === 0 ? (\r\n                                        <div className=\"empty-state\">No guesses yet</div>\r\n                                    ) : (\r\n                                        myGuesses.map((g, index) => (\r\n                                            <div className=\"table-row\" key={index}>\r\n                                                <div>{g.guess}</div>\r\n                                                <div className=\"correct-count\">{g.numbersCorrect}</div>\r\n                                                <div className=\"correct-count\">{g.positionsCorrect}</div>\r\n                                            </div>\r\n                                        ))\r\n                                    )}\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"guess-column\">\r\n                                <h3 className=\"column-title\">Opponent's Guesses</h3>\r\n                                <div className=\"guess-table\">\r\n                                    <div className=\"table-header\">\r\n                                        <div>Guess</div>\r\n                                        <div>Numbers Correct</div>\r\n                                        <div>Positions Correct</div>\r\n                                    </div>\r\n                                    {oppGuesses.length === 0 ? (\r\n                                        <div className=\"empty-state\">No guesses yet</div>\r\n                                    ) : (\r\n                                        oppGuesses.map((g, index) => (\r\n                                            <div className=\"table-row\" key={index}>\r\n                                                <div>{g.guess}</div>\r\n                                                <div className=\"correct-count\">{g.numbersCorrect}</div>\r\n                                                <div className=\"correct-count\">{g.positionsCorrect}</div>\r\n                                            </div>\r\n                                        ))\r\n                                    )}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"guess-input-section\">\r\n                            {myTurn ? (\r\n                                <form className=\"guess-form\" onSubmit={handleSubmitGuess}>\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        className=\"guess-input\"\r\n                                        placeholder=\"Enter your guess\"\r\n                                        value={guess}\r\n                                        onChange={(e) => setGuess(e.target.value)}\r\n                                        maxLength=\"4\"\r\n                                        pattern=\"\\d{4}\"\r\n                                    />\r\n                                    <button\r\n                                        type=\"submit\"\r\n                                        className=\"btn submit-guess-btn\"\r\n                                        disabled={!guess || guess.length !== 4 || new Set(guess).size !== 4}\r\n                                    >\r\n                                        Submit Guess\r\n                                    </button>\r\n                                </form>\r\n                            ) : (\r\n                                <p className=\"waiting-turn\">\r\n                                    <span className=\"pulse-dot\"></span>\r\n                                    Waiting for your turn...\r\n                                </p>\r\n                            )}\r\n                            <NumberHelper />\r\n                            {guessMessage && <div className=\"guess-feedback\">{guessMessage}</div>}\r\n                        </div>\r\n                    </>\r\n                )}\r\n            </main>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default GamePageCreator;\r\n"],"mappings":"AAAA;AACA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAClD,OAASC,SAAS,CAAEC,WAAW,KAAQ,kBAAkB,CACzD,MAAO,CAAAC,KAAK,KAAM,OAAO,CACzB,MAAO,CAAAC,YAAY,KAAM,gBAAgB,CACzC,OAASC,cAAc,GAAI,CAAAC,YAAY,KAAQ,wBAAwB,CACvE,MAAO,uBAAuB,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,CAAAC,QAAA,IAAAC,SAAA,yBAE/B,KAAM,CAAAC,eAAe,CAAGA,CAAA,GAAM,KAAAC,iBAAA,CAAAC,kBAAA,CAC1B,KAAM,CAAEC,MAAO,CAAC,CAAGf,SAAS,CAAC,CAAC,CAC9B,KAAM,CAAAgB,QAAQ,CAAGf,WAAW,CAAC,CAAC,CAC9B,KAAM,CAACgB,QAAQ,CAAEC,WAAW,CAAC,CAAGpB,QAAQ,CAAC,IAAI,CAAC,CAC9C,KAAM,CAACqB,KAAK,CAAEC,QAAQ,CAAC,CAAGtB,QAAQ,CAAC,EAAE,CAAC,CACtC,KAAM,CAACuB,YAAY,CAAEC,eAAe,CAAC,CAAGxB,QAAQ,CAAC,EAAE,CAAC,CACpD,KAAM,CAACyB,WAAW,CAAEC,cAAc,CAAC,CAAG1B,QAAQ,CAAC,IAAI,CAAC,CACpD,KAAM,CAAC2B,SAAS,CAAEC,YAAY,CAAC,CAAG5B,QAAQ,CAAC,KAAK,CAAC,CAEjD;AACAC,SAAS,CAAC,IAAM,CACZ,KAAM,CAAA4B,QAAQ,CAAGC,WAAW,CAAC,SAAY,CACrC,GAAI,CACA,KAAM,CAAAC,GAAG,CAAG,KAAM,CAAA3B,KAAK,CAAC4B,GAAG,oCAAAC,MAAA,CAAoChB,MAAM,CAAE,CAAC,CACxEG,WAAW,CAACW,GAAG,CAACG,IAAI,CAAC,CACrBR,cAAc,CAACK,GAAG,CAACG,IAAI,CAACC,IAAI,CAAC,CAAE;AACnC,CAAE,MAAOC,GAAG,CAAE,CACVC,OAAO,CAACC,KAAK,CAAC,2BAA2B,CAAEF,GAAG,CAAC,CACnD,CACJ,CAAC,CAAE,IAAI,CAAC,CACR,MAAO,IAAMG,aAAa,CAACV,QAAQ,CAAC,CACxC,CAAC,CAAE,CAACZ,MAAM,CAAC,CAAC,CAEZ,GAAI,CAACE,QAAQ,CAAE,mBAAOV,IAAA,MAAA+B,QAAA,CAAG,sBAAoB,CAAG,CAAC,CAEjD;AACA,KAAM,CAAAC,UAAU,CAAGtB,QAAQ,CAACuB,OAAO,CAAC,CAAC,CAAC,CACtC,KAAM,CAAAC,SAAS,CAAG,EAAA5B,iBAAA,CAACI,QAAQ,CAACyB,OAAO,UAAA7B,iBAAA,UAAAA,iBAAA,CAAI,EAAE,EAAE8B,MAAM,CAACC,CAAC,EAAIA,CAAC,CAACC,MAAM,GAAKN,UAAU,CAAC,CAC/E,KAAM,CAAAO,UAAU,CAAG,EAAAhC,kBAAA,CAACG,QAAQ,CAACyB,OAAO,UAAA5B,kBAAA,UAAAA,kBAAA,CAAI,EAAE,EAAE6B,MAAM,CAACC,CAAC,EAAIA,CAAC,CAACC,MAAM,GAAK5B,QAAQ,CAACuB,OAAO,CAAC,CAAC,CAAC,CAAC,CACzF,KAAM,CAAAO,MAAM,CAAG9B,QAAQ,CAACgB,IAAI,GAAKM,UAAU,CAC3C,KAAM,CAAAS,QAAQ,CAAG/B,QAAQ,CAACgC,MAAM,GAAK,UAAU,CAE/C,KAAM,CAAAC,iBAAiB,CAAG,KAAO,CAAAC,CAAC,EAAK,CACnCA,CAAC,CAACC,cAAc,CAAC,CAAC,CAClB,GAAI,CAACjC,KAAK,CAAE,CACRkC,KAAK,CAAC,uBAAuB,CAAC,CAC9B,OACJ,CACA,GAAIlC,KAAK,CAACmC,MAAM,GAAK,CAAC,EAAI,GAAI,CAAAC,GAAG,CAACpC,KAAK,CAAC,CAACqC,IAAI,GAAK,CAAC,CAAE,CACjDlC,eAAe,CAAC,uCAAuC,CAAC,CACxD,OACJ,CACA,GAAI,CACA,KAAM,CAAAO,GAAG,CAAG,KAAM,CAAA3B,KAAK,CAACuD,IAAI,CAAC,uCAAuC,CAAE,CAAE1C,MAAM,CAAE8B,MAAM,CAAEN,UAAU,CAAEpB,KAAM,CAAC,CAAC,CAC5GG,eAAe,CAACO,GAAG,CAACG,IAAI,CAAC0B,OAAO,CAAC,CACjCtC,QAAQ,CAAC,EAAE,CAAC,CAChB,CAAE,MAAOc,GAAG,CAAE,KAAAyB,aAAA,CAAAC,kBAAA,CACVzB,OAAO,CAACC,KAAK,CAAC,yBAAyB,CAAEF,GAAG,CAAC,CAC7CZ,eAAe,CAAC,EAAAqC,aAAA,CAAAzB,GAAG,CAAC2B,QAAQ,UAAAF,aAAA,kBAAAC,kBAAA,CAAZD,aAAA,CAAc3B,IAAI,UAAA4B,kBAAA,iBAAlBA,kBAAA,CAAoBF,OAAO,GAAI,wBAAwB,CAAC,CAC5E,CACJ,CAAC,CAED;AACA,KAAM,CAAAI,cAAc,CAAG,KAAAA,CAAA,GAAY,CAC/B,KAAM,CAAAC,YAAY,CAAGC,MAAM,CAACC,OAAO,CAAC,0EAA0E,CAAC,CAC/G,GAAIF,YAAY,CAAE,CACd,GAAI,CACA,KAAM,CAAA7D,KAAK,CAACuD,IAAI,CAAC,0CAA0C,CAAE,CAAE1C,MAAM,CAAE8B,MAAM,CAAEN,UAAW,CAAC,CAAC,CAC5Fb,YAAY,CAAC,IAAI,CAAC,CACtB,CAAE,MAAOQ,GAAG,CAAE,CACVC,OAAO,CAACC,KAAK,CAAC,wBAAwB,CAAEF,GAAG,CAAC,CAChD,CACJ,CACJ,CAAC,CAED,GAAI,CAAAgC,cAAc,CAAG,EAAE,CACvB,GAAIlB,QAAQ,CAAE,CACV,GAAI/B,QAAQ,CAACkD,MAAM,GAAK,MAAM,CAAE,CAC5BD,cAAc,CAAG,cAAc,CACnC,CAAC,IAAM,IAAIjD,QAAQ,CAACkD,MAAM,GAAK5B,UAAU,CAAE,CACvC2B,cAAc,CAAG,uCAAuC,CAC5D,CAAC,IAAM,CACHA,cAAc,CAAG,kCAAkC,CACvD,CACJ,CAEA,KAAM,CAAAE,eAAe,CAAG,KAAAA,CAAA,GAAY,CAChC,GAAI,CACA,KAAM,CAAAlE,KAAK,CAACuD,IAAI,CAAC,uCAAuC,CAAE,CAAE1C,MAAO,CAAC,CAAC,CACrEC,QAAQ,CAAC,GAAG,CAAC,CACjB,CAAE,MAAOkB,GAAG,CAAE,CACVC,OAAO,CAACC,KAAK,CAAC,uBAAuB,CAAEF,GAAG,CAAC,CAC/C,CACJ,CAAC,CAED,mBACIzB,KAAA,QAAK4D,SAAS,CAAC,6BAA6B,CAAA/B,QAAA,eACxC7B,KAAA,QAAK4D,SAAS,CAAC,SAAS,CAAA/B,QAAA,eACpB7B,KAAA,OAAI4D,SAAS,CAAC,MAAM,CAAA/B,QAAA,EAAC,QACX,cAAA/B,IAAA,SAAM8D,SAAS,CAAC,aAAa,CAAA/B,QAAA,CAAC,UAAQ,CAAM,CAAC,EACnD,CAAC,CACJ,CAACU,QAAQ,eACNzC,IAAA,WAAQ+D,OAAO,CAAER,cAAe,CAACO,SAAS,CAAC,mBAAmB,CAAA/B,QAAA,CAAC,WAE/D,CAAQ,CACX,EACA,CAAC,cAEN7B,KAAA,SAAM4D,SAAS,CAAC,WAAW,CAAA/B,QAAA,eACvB7B,KAAA,QAAK4D,SAAS,CAAC,aAAa,CAAA/B,QAAA,eACxB7B,KAAA,OAAI4D,SAAS,CAAC,YAAY,CAAA/B,QAAA,EAAC,aACZ,cAAA/B,IAAA,SAAM8D,SAAS,CAAC,MAAM,CAAA/B,QAAA,CAAEvB,MAAM,CAAO,CAAC,EACjD,CAAC,cACLR,IAAA,QAAK8D,SAAS,CAAC,cAAc,CAAA/B,QAAA,CACxBU,QAAQ,CAAG,WAAW,CAAGD,MAAM,CAAG,WAAW,CAAG,iBAAiB,CACjE,CAAC,EACL,CAAC,cAENtC,KAAA,QAAK4D,SAAS,CAAC,qBAAqB,CAAA/B,QAAA,EAAC,oBACf,cAAA/B,IAAA,SAAM8D,SAAS,CAAC,MAAM,CAAA/B,QAAA,CAAErB,QAAQ,CAACsD,WAAW,CAAO,CAAC,EACrE,CAAC,CAELvB,QAAQ,eACLvC,KAAA,CAAAE,SAAA,EAAA2B,QAAA,eACI7B,KAAA,QAAK4D,SAAS,CAAC,gBAAgB,CAAA/B,QAAA,EAC1BrB,QAAQ,CAACkD,MAAM,GAAK,MAAM,cACvB1D,KAAA,CAAAE,SAAA,EAAA2B,QAAA,eAAE/B,IAAA,SAAA+B,QAAA,CAAM,cAAE,CAAM,CAAC,IAAC,CAAC4B,cAAc,EAAG,CAAC,CACrCjD,QAAQ,CAACkD,MAAM,GAAK5B,UAAU,cAC9B9B,KAAA,CAAAE,SAAA,EAAA2B,QAAA,eAAE/B,IAAA,CAACF,YAAY,EAACgE,SAAS,CAAC,UAAU,CAAE,CAAC,IAAC,CAACH,cAAc,EAAG,CAAC,cAE3DzD,KAAA,CAAAE,SAAA,EAAA2B,QAAA,eAAE/B,IAAA,SAAA+B,QAAA,CAAM,cAAE,CAAM,CAAC,IAAC,CAAC4B,cAAc,EAAG,CACvC,cACD3D,IAAA,WAAQ8D,SAAS,CAAC,cAAc,CAACC,OAAO,CAAEA,CAAA,GAAMtD,QAAQ,CAAC,GAAG,CAAE,CAAAsB,QAAA,CAAC,gBAE/D,CAAQ,CAAC,EACR,CAAC,cAEN7B,KAAA,QAAK4D,SAAS,CAAC,oBAAoB,CAAA/B,QAAA,eAC/B/B,IAAA,OAAA+B,QAAA,CAAI,uBAAqB,CAAI,CAAC,cAC9B7B,KAAA,MAAA6B,QAAA,EACKrB,QAAQ,CAACuB,OAAO,CAAC,CAAC,CAAC,CAAC,kBAAgB,cAAAjC,IAAA,SAAM8D,SAAS,CAAC,MAAM,CAAA/B,QAAA,CAAErB,QAAQ,CAACsD,WAAW,CAAO,CAAC,EAC1F,CAAC,cACJ9D,KAAA,MAAA6B,QAAA,EACKrB,QAAQ,CAACuB,OAAO,CAAC,CAAC,CAAC,CAAC,kBAAgB,cAAAjC,IAAA,SAAM8D,SAAS,CAAC,MAAM,CAAA/B,QAAA,CAAErB,QAAQ,CAACuD,WAAW,CAAO,CAAC,EAC1F,CAAC,EACH,CAAC,EACR,CACL,CAEA,CAACxB,QAAQ,EAAI,CAACvB,SAAS,eACpBhB,KAAA,CAAAE,SAAA,EAAA2B,QAAA,eACI7B,KAAA,QAAK4D,SAAS,CAAC,yBAAyB,CAAA/B,QAAA,eACpC7B,KAAA,QAAK4D,SAAS,CAAC,cAAc,CAAA/B,QAAA,eACzB/B,IAAA,OAAI8D,SAAS,CAAC,cAAc,CAAA/B,QAAA,CAAC,cAAY,CAAI,CAAC,cAC9C7B,KAAA,QAAK4D,SAAS,CAAC,aAAa,CAAA/B,QAAA,eACxB7B,KAAA,QAAK4D,SAAS,CAAC,cAAc,CAAA/B,QAAA,eACzB/B,IAAA,QAAA+B,QAAA,CAAK,OAAK,CAAK,CAAC,cAChB/B,IAAA,QAAA+B,QAAA,CAAK,iBAAe,CAAK,CAAC,cAC1B/B,IAAA,QAAA+B,QAAA,CAAK,mBAAiB,CAAK,CAAC,EAC3B,CAAC,CACLG,SAAS,CAACa,MAAM,GAAK,CAAC,cACnB/C,IAAA,QAAK8D,SAAS,CAAC,aAAa,CAAA/B,QAAA,CAAC,gBAAc,CAAK,CAAC,CAEjDG,SAAS,CAACgC,GAAG,CAAC,CAAC7B,CAAC,CAAE8B,KAAK,gBACnBjE,KAAA,QAAK4D,SAAS,CAAC,WAAW,CAAA/B,QAAA,eACtB/B,IAAA,QAAA+B,QAAA,CAAMM,CAAC,CAACzB,KAAK,CAAM,CAAC,cACpBZ,IAAA,QAAK8D,SAAS,CAAC,eAAe,CAAA/B,QAAA,CAAEM,CAAC,CAAC+B,cAAc,CAAM,CAAC,cACvDpE,IAAA,QAAK8D,SAAS,CAAC,eAAe,CAAA/B,QAAA,CAAEM,CAAC,CAACgC,gBAAgB,CAAM,CAAC,GAH7BF,KAI3B,CACR,CACJ,EACA,CAAC,EACL,CAAC,cAENjE,KAAA,QAAK4D,SAAS,CAAC,cAAc,CAAA/B,QAAA,eACzB/B,IAAA,OAAI8D,SAAS,CAAC,cAAc,CAAA/B,QAAA,CAAC,oBAAkB,CAAI,CAAC,cACpD7B,KAAA,QAAK4D,SAAS,CAAC,aAAa,CAAA/B,QAAA,eACxB7B,KAAA,QAAK4D,SAAS,CAAC,cAAc,CAAA/B,QAAA,eACzB/B,IAAA,QAAA+B,QAAA,CAAK,OAAK,CAAK,CAAC,cAChB/B,IAAA,QAAA+B,QAAA,CAAK,iBAAe,CAAK,CAAC,cAC1B/B,IAAA,QAAA+B,QAAA,CAAK,mBAAiB,CAAK,CAAC,EAC3B,CAAC,CACLQ,UAAU,CAACQ,MAAM,GAAK,CAAC,cACpB/C,IAAA,QAAK8D,SAAS,CAAC,aAAa,CAAA/B,QAAA,CAAC,gBAAc,CAAK,CAAC,CAEjDQ,UAAU,CAAC2B,GAAG,CAAC,CAAC7B,CAAC,CAAE8B,KAAK,gBACpBjE,KAAA,QAAK4D,SAAS,CAAC,WAAW,CAAA/B,QAAA,eACtB/B,IAAA,QAAA+B,QAAA,CAAMM,CAAC,CAACzB,KAAK,CAAM,CAAC,cACpBZ,IAAA,QAAK8D,SAAS,CAAC,eAAe,CAAA/B,QAAA,CAAEM,CAAC,CAAC+B,cAAc,CAAM,CAAC,cACvDpE,IAAA,QAAK8D,SAAS,CAAC,eAAe,CAAA/B,QAAA,CAAEM,CAAC,CAACgC,gBAAgB,CAAM,CAAC,GAH7BF,KAI3B,CACR,CACJ,EACA,CAAC,EACL,CAAC,EACL,CAAC,cAENjE,KAAA,QAAK4D,SAAS,CAAC,qBAAqB,CAAA/B,QAAA,EAC/BS,MAAM,cACHtC,KAAA,SAAM4D,SAAS,CAAC,YAAY,CAACQ,QAAQ,CAAE3B,iBAAkB,CAAAZ,QAAA,eACrD/B,IAAA,UACIuE,IAAI,CAAC,MAAM,CACXT,SAAS,CAAC,aAAa,CACvBU,WAAW,CAAC,kBAAkB,CAC9BC,KAAK,CAAE7D,KAAM,CACb8D,QAAQ,CAAG9B,CAAC,EAAK/B,QAAQ,CAAC+B,CAAC,CAAC+B,MAAM,CAACF,KAAK,CAAE,CAC1CG,SAAS,CAAC,GAAG,CACbC,OAAO,CAAC,QAAO,CAClB,CAAC,cACF7E,IAAA,WACIuE,IAAI,CAAC,QAAQ,CACbT,SAAS,CAAC,sBAAsB,CAChCgB,QAAQ,CAAE,CAAClE,KAAK,EAAIA,KAAK,CAACmC,MAAM,GAAK,CAAC,EAAI,GAAI,CAAAC,GAAG,CAACpC,KAAK,CAAC,CAACqC,IAAI,GAAK,CAAE,CAAAlB,QAAA,CACvE,cAED,CAAQ,CAAC,EACP,CAAC,cAEP7B,KAAA,MAAG4D,SAAS,CAAC,cAAc,CAAA/B,QAAA,eACvB/B,IAAA,SAAM8D,SAAS,CAAC,WAAW,CAAO,CAAC,2BAEvC,EAAG,CACN,cACD9D,IAAA,CAACJ,YAAY,GAAE,CAAC,CACfkB,YAAY,eAAId,IAAA,QAAK8D,SAAS,CAAC,gBAAgB,CAAA/B,QAAA,CAAEjB,YAAY,CAAM,CAAC,EACpE,CAAC,EACR,CACL,EACC,CAAC,EACN,CAAC,CAEd,CAAC,CAED,cAAe,CAAAT,eAAe","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}