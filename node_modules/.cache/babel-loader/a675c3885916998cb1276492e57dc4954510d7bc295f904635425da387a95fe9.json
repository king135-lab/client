{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ademm\\\\Documents\\\\Projects\\\\number-position-game\\\\client\\\\src\\\\components\\\\GuessBoard.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport GuessRow from './GuessRow';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction GuessBoard() {\n  _s();\n  const [guesses, setGuesses] = useState([]);\n\n  // Simulate a guess (for now, to test UI)\n  const handleGuess = (guess = \"1234\", n = 2, p = 1) => {\n    setGuesses([...guesses, {\n      guess,\n      n,\n      p\n    }]);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Game Board\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => handleGuess(),\n      children: \"Make a Guess\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }, this), \" \", guesses.map((entry, index) => /*#__PURE__*/_jsxDEV(GuessRow, {\n      guess: entry.guess,\n      n: entry.n,\n      p: entry.p\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 17\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 9\n  }, this);\n}\n_s(GuessBoard, \"o1oJThhKU1yQYkTwv9Oq4sjxIZ4=\");\n_c = GuessBoard;\nexport default GuessBoard;\nvar _c;\n$RefreshReg$(_c, \"GuessBoard\");","map":{"version":3,"names":["React","useState","GuessRow","jsxDEV","_jsxDEV","GuessBoard","_s","guesses","setGuesses","handleGuess","guess","n","p","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","entry","index","_c","$RefreshReg$"],"sources":["C:/Users/ademm/Documents/Projects/number-position-game/client/src/components/GuessBoard.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport GuessRow from './GuessRow';\r\n\r\nfunction GuessBoard() {\r\n    const [guesses, setGuesses] = useState([]);\r\n\r\n    // Simulate a guess (for now, to test UI)\r\n    const handleGuess = (guess = \"1234\", n = 2, p = 1) => {\r\n        setGuesses([...guesses, { guess, n, p }]);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h2>Game Board</h2>\r\n            <button onClick={() => handleGuess()}>Make a Guess</button> {/* Temporary button to simulate guesses */}\r\n            {guesses.map((entry, index) => (\r\n                <GuessRow key={index} guess={entry.guess} n={entry.n} p={entry.p} />\r\n            ))}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default GuessBoard;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,QAAQ,MAAM,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,SAASC,UAAUA,CAAA,EAAG;EAAAC,EAAA;EAClB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;;EAE1C;EACA,MAAMQ,WAAW,GAAGA,CAACC,KAAK,GAAG,MAAM,EAAEC,CAAC,GAAG,CAAC,EAAEC,CAAC,GAAG,CAAC,KAAK;IAClDJ,UAAU,CAAC,CAAC,GAAGD,OAAO,EAAE;MAAEG,KAAK;MAAEC,CAAC;MAAEC;IAAE,CAAC,CAAC,CAAC;EAC7C,CAAC;EAED,oBACIR,OAAA;IAAAS,QAAA,gBACIT,OAAA;MAAAS,QAAA,EAAI;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACnBb,OAAA;MAAQc,OAAO,EAAEA,CAAA,KAAMT,WAAW,CAAC,CAAE;MAAAI,QAAA,EAAC;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,KAAC,EAC3DV,OAAO,CAACY,GAAG,CAAC,CAACC,KAAK,EAAEC,KAAK,kBACtBjB,OAAA,CAACF,QAAQ;MAAaQ,KAAK,EAAEU,KAAK,CAACV,KAAM;MAACC,CAAC,EAAES,KAAK,CAACT,CAAE;MAACC,CAAC,EAAEQ,KAAK,CAACR;IAAE,GAAlDS,KAAK;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAA+C,CACtE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEd;AAACX,EAAA,CAjBQD,UAAU;AAAAiB,EAAA,GAAVjB,UAAU;AAmBnB,eAAeA,UAAU;AAAC,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}