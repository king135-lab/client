{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ademm\\\\Documents\\\\Projects\\\\number-position-game\\\\client\\\\src\\\\components\\\\CreateGame.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport './CreateGame.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CreateGame = () => {\n  _s();\n  const {\n    state\n  } = useLocation();\n  const [playerName, setPlayerName] = useState(state ? state.playerName : '');\n  const [gameId, setGameId] = useState('');\n  const [playerJoined, setPlayerJoined] = useState(false);\n  const navigate = useNavigate();\n  useEffect(() => {\n    if (!state) {\n      alert('No player information found!');\n      navigate('/');\n    }\n  }, [state, navigate]);\n  useEffect(() => {\n    if (playerName && !gameId) {\n      axios.post('http://localhost:5000/api/games/start-game', {\n        players: [playerName]\n      }).get(`http://localhost:5000/api/games/${gameId}`).then(response => {\n        setGameId(response.data.gameId);\n      }).catch(error => {\n        console.error('Error starting the game:', error);\n      });\n    }\n  }, [playerName, gameId]);\n  useEffect(() => {\n    if (playerJoined && gameId) {\n      navigate(`/game/${gameId}`);\n    }\n  }, [playerJoined, gameId, navigate]);\n  const handlePlayerJoin = () => {\n    setPlayerJoined(true);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"game-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Game ID: \", gameId || 'Loading...']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Welcome, \", playerName, \"!\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), !playerJoined ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Waiting for another player to join...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Another player has joined! Starting game...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"button\",\n      onClick: handlePlayerJoin,\n      children: \"Simulate Player Join (For Testing)\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 9\n  }, this);\n};\n_s(CreateGame, \"3LYKX3sSn29D7H7HaIUqR/1g0Jc=\", false, function () {\n  return [useLocation, useNavigate];\n});\n_c = CreateGame;\nexport default CreateGame;\nvar _c;\n$RefreshReg$(_c, \"CreateGame\");","map":{"version":3,"names":["React","useState","useEffect","useLocation","useNavigate","axios","jsxDEV","_jsxDEV","CreateGame","_s","state","playerName","setPlayerName","gameId","setGameId","playerJoined","setPlayerJoined","navigate","alert","post","players","get","then","response","data","catch","error","console","handlePlayerJoin","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/ademm/Documents/Projects/number-position-game/client/src/components/CreateGame.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useLocation, useNavigate } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport './CreateGame.css';\r\n\r\nconst CreateGame = () => {\r\n    const { state } = useLocation();\r\n    const [playerName, setPlayerName] = useState(state ? state.playerName : '');\r\n    const [gameId, setGameId] = useState('');\r\n    const [playerJoined, setPlayerJoined] = useState(false);\r\n    const navigate = useNavigate();\r\n\r\n    useEffect(() => {\r\n        if (!state) {\r\n            alert('No player information found!');\r\n            navigate('/');\r\n        }\r\n    }, [state, navigate]);\r\n\r\n    useEffect(() => {\r\n        if (playerName && !gameId) {\r\n            axios\r\n                .post('http://localhost:5000/api/games/start-game', { players: [playerName] })\r\n                .get(`http://localhost:5000/api/games/${gameId}`)\r\n\r\n                .then(response => {\r\n                    setGameId(response.data.gameId);\r\n                })\r\n                .catch(error => {\r\n                    console.error('Error starting the game:', error);\r\n                });\r\n        }\r\n    }, [playerName, gameId]);\r\n\r\n    useEffect(() => {\r\n        if (playerJoined && gameId) {\r\n            navigate(`/game/${gameId}`);\r\n        }\r\n    }, [playerJoined, gameId, navigate]);\r\n\r\n    const handlePlayerJoin = () => {\r\n        setPlayerJoined(true);\r\n    };\r\n\r\n    return (\r\n        <div className=\"game-container\">\r\n            <h1>Game ID: {gameId || 'Loading...'}</h1>\r\n            <p>Welcome, {playerName}!</p>\r\n            {!playerJoined ? (\r\n                <p>Waiting for another player to join...</p>\r\n            ) : (\r\n                <p>Another player has joined! Starting game...</p>\r\n            )}\r\n            <button className=\"button\" onClick={handlePlayerJoin}>\r\n                Simulate Player Join (For Testing)\r\n            </button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CreateGame;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}