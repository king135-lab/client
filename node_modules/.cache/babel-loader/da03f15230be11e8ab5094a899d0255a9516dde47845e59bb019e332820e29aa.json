{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ademm\\\\Documents\\\\Projects\\\\number-position-game\\\\client\\\\src\\\\components\\\\GuessBoard.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport GuessRow from './GuessRow';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction GuessBoard() {\n  _s();\n  const [guesses, setGuesses] = useState([]);\n  const [currentGuess, setCurrentGuess] = useState('');\n  const handleGuessInputChange = event => {\n    setCurrentGuess(event.target.value);\n  };\n\n  // Simulate a guess (for now, to test UI)\n  const handleGuessSubmit = event => {\n    event.preventDefault();\n    // Replace this with the actual logic to calculate N and P\n    const n = 2; // Placeholder value\n    const p = 1; // Placeholder value\n    setGuesses([...guesses, {\n      guess: currentGuess,\n      n,\n      p\n    }]);\n    setCurrentGuess('');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Game Board\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleGuessSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: currentGuess,\n        onChange: handleGuessInputChange,\n        placeholder: \"Enter your guess\",\n        maxLength: 4 // Example for a 4-digit game\n        ,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit Guess\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this), guesses.map((entry, index) => /*#__PURE__*/_jsxDEV(GuessRow, {\n      guess: entry.guess,\n      n: entry.n,\n      p: entry.p\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 17\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }, this);\n}\n_s(GuessBoard, \"qfu9/EjommeSmYkBfmmZb6XT3NY=\");\n_c = GuessBoard;\nexport default GuessBoard;\nvar _c;\n$RefreshReg$(_c, \"GuessBoard\");","map":{"version":3,"names":["React","useState","GuessRow","jsxDEV","_jsxDEV","GuessBoard","_s","guesses","setGuesses","currentGuess","setCurrentGuess","handleGuessInputChange","event","target","value","handleGuessSubmit","preventDefault","n","p","guess","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","onChange","placeholder","maxLength","required","map","entry","index","_c","$RefreshReg$"],"sources":["C:/Users/ademm/Documents/Projects/number-position-game/client/src/components/GuessBoard.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport GuessRow from './GuessRow';\r\n\r\nfunction GuessBoard() {\r\n    const [guesses, setGuesses] = useState([]);\r\n    const [currentGuess, setCurrentGuess] = useState('');\r\n\r\n    const handleGuessInputChange = (event) => {\r\n        setCurrentGuess(event.target.value);\r\n    };\r\n\r\n    // Simulate a guess (for now, to test UI)\r\n    const handleGuessSubmit = (event) => {\r\n        event.preventDefault();\r\n        // Replace this with the actual logic to calculate N and P\r\n        const n = 2; // Placeholder value\r\n        const p = 1; // Placeholder value\r\n        setGuesses([...guesses, { guess: currentGuess, n, p }]);\r\n        setCurrentGuess('');\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h2>Game Board</h2>\r\n            <form onSubmit={handleGuessSubmit}>\r\n                <input\r\n                    type=\"text\"\r\n                    value={currentGuess}\r\n                    onChange={handleGuessInputChange}\r\n                    placeholder=\"Enter your guess\"\r\n                    maxLength={4} // Example for a 4-digit game\r\n                    required\r\n                />\r\n                <button type=\"submit\">Submit Guess</button>\r\n            </form>\r\n            {guesses.map((entry, index) => (\r\n                <GuessRow key={index} guess={entry.guess} n={entry.n} p={entry.p} />\r\n            ))}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default GuessBoard;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,QAAQ,MAAM,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,SAASC,UAAUA,CAAA,EAAG;EAAAC,EAAA;EAClB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACQ,YAAY,EAAEC,eAAe,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAEpD,MAAMU,sBAAsB,GAAIC,KAAK,IAAK;IACtCF,eAAe,CAACE,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EACvC,CAAC;;EAED;EACA,MAAMC,iBAAiB,GAAIH,KAAK,IAAK;IACjCA,KAAK,CAACI,cAAc,CAAC,CAAC;IACtB;IACA,MAAMC,CAAC,GAAG,CAAC,CAAC,CAAC;IACb,MAAMC,CAAC,GAAG,CAAC,CAAC,CAAC;IACbV,UAAU,CAAC,CAAC,GAAGD,OAAO,EAAE;MAAEY,KAAK,EAAEV,YAAY;MAAEQ,CAAC;MAAEC;IAAE,CAAC,CAAC,CAAC;IACvDR,eAAe,CAAC,EAAE,CAAC;EACvB,CAAC;EAED,oBACIN,OAAA;IAAAgB,QAAA,gBACIhB,OAAA;MAAAgB,QAAA,EAAI;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACnBpB,OAAA;MAAMqB,QAAQ,EAAEV,iBAAkB;MAAAK,QAAA,gBAC9BhB,OAAA;QACIsB,IAAI,EAAC,MAAM;QACXZ,KAAK,EAAEL,YAAa;QACpBkB,QAAQ,EAAEhB,sBAAuB;QACjCiB,WAAW,EAAC,kBAAkB;QAC9BC,SAAS,EAAE,CAAE,CAAC;QAAA;QACdC,QAAQ;MAAA;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACX,CAAC,eACFpB,OAAA;QAAQsB,IAAI,EAAC,QAAQ;QAAAN,QAAA,EAAC;MAAY;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACzC,CAAC,EACNjB,OAAO,CAACwB,GAAG,CAAC,CAACC,KAAK,EAAEC,KAAK,kBACtB7B,OAAA,CAACF,QAAQ;MAAaiB,KAAK,EAAEa,KAAK,CAACb,KAAM;MAACF,CAAC,EAAEe,KAAK,CAACf,CAAE;MAACC,CAAC,EAAEc,KAAK,CAACd;IAAE,GAAlDe,KAAK;MAAAZ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAA+C,CACtE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEd;AAAClB,EAAA,CArCQD,UAAU;AAAA6B,EAAA,GAAV7B,UAAU;AAuCnB,eAAeA,UAAU;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}