{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ademm\\\\Documents\\\\Projects\\\\number-position-game\\\\client\\\\src\\\\components\\\\GamePage.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GamePage = () => {\n  _s();\n  const {\n    gameId\n  } = useParams();\n  const [gameData, setGameData] = useState(null);\n  const [error, setError] = useState(null);\n  const [secretNumber, setSecretNumber] = useState('');\n  const [guess, setGuess] = useState('');\n  const [turn, setTurn] = useState(0); // 0 for player1, 1 for player2\n  const [guesses, setGuesses] = useState([]);\n  const [message, setMessage] = useState('');\n\n  // Fetch game data from the server when the component mounts or the gameId changes\n  useEffect(() => {\n    axios.get(`http://localhost:5000/api/games/${gameId}`).then(response => {\n      setGameData(response.data);\n    }).catch(err => {\n      console.error('Error fetching game data:', err.response || err);\n      setError('Error fetching game data');\n    });\n  }, [gameId]);\n\n  // Handle secret number input, only allowing unique digits\n  const handleSecretNumberChange = e => {\n    const input = e.target.value;\n    if (/^\\d*$/.test(input) && new Set(input).size === input.length) {\n      setSecretNumber(input);\n    }\n  };\n\n  // Set the secret number for the current player\n  const handleSetSecretNumber = () => {\n    if (secretNumber.length < 4 || secretNumber.length > 6) {\n      setMessage('Secret number must be 4-6 unique digits.');\n      return;\n    }\n    axios.post(`/api/games/${gameId}/set-secret`, {\n      secretNumber\n    }).then(() => setMessage('Secret number set successfully!')).catch(err => setMessage('Error setting secret number.'));\n  };\n\n  // Handle guess input, ensuring it has unique digits\n  const handleGuessChange = e => {\n    const input = e.target.value;\n    if (/^\\d*$/.test(input) && new Set(input).size === input.length) {\n      setGuess(input);\n    }\n  };\n\n  // Make a guess, ensuring it matches the secret number length and is not duplicated\n  const handleMakeGuess = () => {\n    if (guess.length !== secretNumber.length) {\n      setMessage(`Guess must be ${secretNumber.length} unique digits.`);\n      return;\n    }\n    if (guesses.includes(guess)) {\n      setMessage('You already guessed that number.');\n      return;\n    }\n    setGuesses([...guesses, guess]);\n    setTurn((turn + 1) % 2); // Switch turn between players\n    setMessage(`Guess recorded! Waiting for Player ${turn === 0 ? 2 : 1}`);\n  };\n\n  // Show loading or error message while fetching data\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 23\n  }, this);\n  if (!gameData) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 27\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Game: \", gameData.gameId]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Players: \", gameData.players.join(', ')]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Status: \", gameData.status]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this), secretNumber ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Player \", turn + 1, \", make your guess:\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: guess,\n        onChange: handleGuessChange,\n        placeholder: \"Enter your guess\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleMakeGuess,\n        children: \"Submit Guess\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Set a secret number (4-6 unique digits):\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: secretNumber,\n        onChange: handleSecretNumberChange,\n        placeholder: \"Enter secret number\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSetSecretNumber,\n        children: \"Set Secret Number\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Messages:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Previous Guesses:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 17\n      }, this), guesses.map((g, index) => /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Guess \", index + 1, \": \", g]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 21\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 9\n  }, this);\n};\n_s(GamePage, \"zg0fFbppg0svNuu0zIWfs/yYeAE=\", false, function () {\n  return [useParams];\n});\n_c = GamePage;\nexport default GamePage;\nvar _c;\n$RefreshReg$(_c, \"GamePage\");","map":{"version":3,"names":["React","useEffect","useState","axios","useParams","jsxDEV","_jsxDEV","GamePage","_s","gameId","gameData","setGameData","error","setError","secretNumber","setSecretNumber","guess","setGuess","turn","setTurn","guesses","setGuesses","message","setMessage","get","then","response","data","catch","err","console","handleSecretNumberChange","e","input","target","value","test","Set","size","length","handleSetSecretNumber","post","handleGuessChange","handleMakeGuess","includes","children","fileName","_jsxFileName","lineNumber","columnNumber","players","join","status","type","onChange","placeholder","onClick","map","g","index","_c","$RefreshReg$"],"sources":["C:/Users/ademm/Documents/Projects/number-position-game/client/src/components/GamePage.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport { useParams } from 'react-router-dom';\r\n\r\nconst GamePage = () => {\r\n    const { gameId } = useParams();\r\n    const [gameData, setGameData] = useState(null);\r\n    const [error, setError] = useState(null);\r\n    const [secretNumber, setSecretNumber] = useState('');\r\n    const [guess, setGuess] = useState('');\r\n    const [turn, setTurn] = useState(0);  // 0 for player1, 1 for player2\r\n    const [guesses, setGuesses] = useState([]);\r\n    const [message, setMessage] = useState('');\r\n\r\n    // Fetch game data from the server when the component mounts or the gameId changes\r\n    useEffect(() => {\r\n        axios\r\n            .get(`http://localhost:5000/api/games/${gameId}`)\r\n            .then(response => {\r\n                setGameData(response.data);\r\n            })\r\n            .catch(err => {\r\n                console.error('Error fetching game data:', err.response || err);\r\n                setError('Error fetching game data');\r\n            });\r\n\r\n    }, [gameId]);\r\n\r\n    // Handle secret number input, only allowing unique digits\r\n    const handleSecretNumberChange = (e) => {\r\n        const input = e.target.value;\r\n        if (/^\\d*$/.test(input) && new Set(input).size === input.length) {\r\n            setSecretNumber(input);\r\n        }\r\n    };\r\n\r\n    // Set the secret number for the current player\r\n    const handleSetSecretNumber = () => {\r\n        if (secretNumber.length < 4 || secretNumber.length > 6) {\r\n            setMessage('Secret number must be 4-6 unique digits.');\r\n            return;\r\n        }\r\n        axios\r\n            .post(`/api/games/${gameId}/set-secret`, { secretNumber })\r\n            .then(() => setMessage('Secret number set successfully!'))\r\n            .catch(err => setMessage('Error setting secret number.'));\r\n    };\r\n\r\n    // Handle guess input, ensuring it has unique digits\r\n    const handleGuessChange = (e) => {\r\n        const input = e.target.value;\r\n        if (/^\\d*$/.test(input) && new Set(input).size === input.length) {\r\n            setGuess(input);\r\n        }\r\n    };\r\n\r\n    // Make a guess, ensuring it matches the secret number length and is not duplicated\r\n    const handleMakeGuess = () => {\r\n        if (guess.length !== secretNumber.length) {\r\n            setMessage(`Guess must be ${secretNumber.length} unique digits.`);\r\n            return;\r\n        }\r\n        if (guesses.includes(guess)) {\r\n            setMessage('You already guessed that number.');\r\n            return;\r\n        }\r\n        setGuesses([...guesses, guess]);\r\n        setTurn((turn + 1) % 2); // Switch turn between players\r\n        setMessage(`Guess recorded! Waiting for Player ${turn === 0 ? 2 : 1}`);\r\n    };\r\n\r\n    // Show loading or error message while fetching data\r\n    if (error) return <div>{error}</div>;\r\n    if (!gameData) return <div>Loading...</div>;\r\n\r\n    return (\r\n        <div>\r\n            <h1>Game: {gameData.gameId}</h1>\r\n            <p>Players: {gameData.players.join(', ')}</p>\r\n            <p>Status: {gameData.status}</p>\r\n\r\n            {/* Display input section for guessing or setting secret number */}\r\n            {secretNumber ? (\r\n                <div>\r\n                    <h2>Player {turn + 1}, make your guess:</h2>\r\n                    <input\r\n                        type=\"text\"\r\n                        value={guess}\r\n                        onChange={handleGuessChange}\r\n                        placeholder=\"Enter your guess\"\r\n                    />\r\n                    <button onClick={handleMakeGuess}>Submit Guess</button>\r\n                </div>\r\n            ) : (\r\n                <div>\r\n                    <h2>Set a secret number (4-6 unique digits):</h2>\r\n                    <input\r\n                        type=\"text\"\r\n                        value={secretNumber}\r\n                        onChange={handleSecretNumberChange}\r\n                        placeholder=\"Enter secret number\"\r\n                    />\r\n                    <button onClick={handleSetSecretNumber}>Set Secret Number</button>\r\n                </div>\r\n            )}\r\n\r\n            {/* Display messages or feedback to players */}\r\n            <div>\r\n                <h3>Messages:</h3>\r\n                <p>{message}</p>\r\n            </div>\r\n\r\n            {/* Show list of previous guesses */}\r\n            <div>\r\n                <h3>Previous Guesses:</h3>\r\n                {guesses.map((g, index) => (\r\n                    <p key={index}>Guess {index + 1}: {g}</p>\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default GamePage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}