{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ademm\\\\Documents\\\\Projects\\\\number-position-game\\\\client\\\\src\\\\components\\\\CreateGame.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport './CreateGame.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst CreateGame = () => {\n  _s();\n  const {\n    state\n  } = useLocation();\n  const [playerName, setPlayerName] = useState(state ? state.playerName : '');\n  const [gameId, setGameId] = useState('');\n  const [playerJoined, setPlayerJoined] = useState(false);\n  const [gameStatus, setGameStatus] = useState('waiting');\n  const navigate = useNavigate();\n  useEffect(() => {\n    if (!state) {\n      alert('No player information found!');\n      navigate('/');\n    }\n  }, [state, navigate]);\n  useEffect(() => {\n    if (playerName && !gameId) {\n      axios.post('http://localhost:5000/api/games', {\n        players: [playerName]\n      }).then(response => {\n        setGameId(response.data.gameId); // Corrected access to response data\n      }).catch(error => {\n        console.error('Error starting the game:', error);\n      });\n    }\n  }, [playerName, gameId]);\n  useEffect(() => {\n    if (playerJoined && gameId) {\n      navigate(`/game/${gameId}`);\n    }\n  }, [playerJoined, gameId, navigate]);\n  const handlePlayerJoin = () => {\n    setPlayerJoined(true);\n    setGameStatus('in-progress'); // Change status when second player joins\n  };\n  useEffect(() => {\n    if (gameId) {\n      // Fetch game data after creation\n      axios.get(`http://localhost:5000/api/games/${gameId}`).then(response => {\n        setGameStatus(response.data.status); // Update game status from server\n      }).catch(error => {\n        console.error('Error fetching game data:', error);\n      });\n    }\n  }, [gameId]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"game-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Game ID: \", gameId || 'Loading...']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Welcome, \", playerName, \"!\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this), gameStatus === 'waiting' ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Waiting for another player to join...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"button\",\n        onClick: handlePlayerJoin,\n        children: \"Simulate Player Join (For Testing)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Another player has joined! Starting game...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 9\n  }, this);\n};\n_s(CreateGame, \"rh3wwWKurUjDliE/fsg03jmZP68=\", false, function () {\n  return [useLocation, useNavigate];\n});\n_c = CreateGame;\nexport default CreateGame;\nvar _c;\n$RefreshReg$(_c, \"CreateGame\");","map":{"version":3,"names":["React","useState","useEffect","useLocation","useNavigate","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","CreateGame","_s","state","playerName","setPlayerName","gameId","setGameId","playerJoined","setPlayerJoined","gameStatus","setGameStatus","navigate","alert","post","players","then","response","data","catch","error","console","handlePlayerJoin","get","status","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/ademm/Documents/Projects/number-position-game/client/src/components/CreateGame.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useLocation, useNavigate } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport './CreateGame.css';\r\n\r\nconst CreateGame = () => {\r\n    const { state } = useLocation();\r\n    const [playerName, setPlayerName] = useState(state ? state.playerName : '');\r\n    const [gameId, setGameId] = useState('');\r\n    const [playerJoined, setPlayerJoined] = useState(false);\r\n    const [gameStatus, setGameStatus] = useState('waiting');\r\n    const navigate = useNavigate();\r\n\r\n    useEffect(() => {\r\n        if (!state) {\r\n            alert('No player information found!');\r\n            navigate('/');\r\n        }\r\n    }, [state, navigate]);\r\n\r\n    useEffect(() => {\r\n        if (playerName && !gameId) {\r\n            axios\r\n                .post('http://localhost:5000/api/games', { players: [playerName] })\r\n                .then(response => {\r\n                    setGameId(response.data.gameId); // Corrected access to response data\r\n                })\r\n                .catch(error => {\r\n                    console.error('Error starting the game:', error);\r\n                });\r\n        }\r\n    }, [playerName, gameId]);\r\n\r\n    useEffect(() => {\r\n        if (playerJoined && gameId) {\r\n            navigate(`/game/${gameId}`);\r\n        }\r\n    }, [playerJoined, gameId, navigate]);\r\n\r\n    const handlePlayerJoin = () => {\r\n        setPlayerJoined(true);\r\n        setGameStatus('in-progress'); // Change status when second player joins\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (gameId) {\r\n            // Fetch game data after creation\r\n            axios\r\n                .get(`http://localhost:5000/api/games/${gameId}`)\r\n                .then(response => {\r\n                    setGameStatus(response.data.status); // Update game status from server\r\n                })\r\n                .catch(error => {\r\n                    console.error('Error fetching game data:', error);\r\n                });\r\n        }\r\n    }, [gameId]);\r\n\r\n    return (\r\n        <div className=\"game-container\">\r\n            <h1>Game ID: {gameId || 'Loading...'}</h1>\r\n            <p>Welcome, {playerName}!</p>\r\n            {gameStatus === 'waiting' ? (\r\n                <>\r\n                    <p>Waiting for another player to join...</p>\r\n                    <button className=\"button\" onClick={handlePlayerJoin}>\r\n                        Simulate Player Join (For Testing)\r\n                    </button>\r\n                </>\r\n            ) : (\r\n                <p>Another player has joined! Starting game...</p>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CreateGame;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}