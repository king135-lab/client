{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ademm\\\\Documents\\\\Projects\\\\number-position-game\\\\client\\\\src\\\\components\\\\JoinGame.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst JoinGame = ({\n  gameId: initialGameId\n}) => {\n  _s();\n  const [playerName, setPlayerName] = useState('');\n  const [gameId, setGameId] = useState(initialGameId || '');\n  const [message, setMessage] = useState('');\n  const navigate = useNavigate();\n  const handleJoinGame = async () => {\n    if (!playerName || !gameId) {\n      setMessage('Player name and Game ID are required!');\n      return;\n    }\n    try {\n      const response = await axios.post('http://localhost:5000/api/games/join', {\n        gameId,\n        player: playerName\n      });\n      if (response.data.game) {\n        setMessage('Player joined the game!');\n\n        // If the game has both players, redirect the joiner to set their secret code\n        if (response.data.game.players.length === 2) {\n          navigate(`/secretcode/j/${gameId}`, {\n            state: {\n              playerName,\n              role: 'joiner'\n            }\n          });\n        }\n      } else {\n        setMessage(response.data.message);\n      }\n    } catch (err) {\n      console.error('Error joining the game:', err);\n      setMessage('Error joining the game. Please check the Game ID and try again.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Join Game\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Enter your name\",\n      value: playerName,\n      onChange: e => setPlayerName(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), !initialGameId && /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Enter Game ID\",\n      value: gameId,\n      onChange: e => setGameId(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleJoinGame,\n      children: \"Join Game\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 25\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n};\n_s(JoinGame, \"kcZtYHX3I3vIj7C9OglCEYx7cDM=\", false, function () {\n  return [useNavigate];\n});\n_c = JoinGame;\nexport default JoinGame;\nvar _c;\n$RefreshReg$(_c, \"JoinGame\");","map":{"version":3,"names":["React","useState","axios","useNavigate","jsxDEV","_jsxDEV","JoinGame","gameId","initialGameId","_s","playerName","setPlayerName","setGameId","message","setMessage","navigate","handleJoinGame","response","post","player","data","game","players","length","state","role","err","console","error","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["C:/Users/ademm/Documents/Projects/number-position-game/client/src/components/JoinGame.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst JoinGame = ({ gameId: initialGameId }) => {\r\n    const [playerName, setPlayerName] = useState('');\r\n    const [gameId, setGameId] = useState(initialGameId || '');\r\n    const [message, setMessage] = useState('');\r\n    const navigate = useNavigate();\r\n\r\n    const handleJoinGame = async () => {\r\n        if (!playerName || !gameId) {\r\n            setMessage('Player name and Game ID are required!');\r\n            return;\r\n        }\r\n\r\n        try {\r\n            const response = await axios.post('http://localhost:5000/api/games/join', {\r\n                gameId,\r\n                player: playerName,\r\n            });\r\n\r\n            if (response.data.game) {\r\n                setMessage('Player joined the game!');\r\n\r\n                // If the game has both players, redirect the joiner to set their secret code\r\n                if (response.data.game.players.length === 2) {\r\n                    navigate(`/secretcode/j/${gameId}`, { state: { playerName, role: 'joiner' } });\r\n                }\r\n            } else {\r\n                setMessage(response.data.message);\r\n            }\r\n        } catch (err) {\r\n            console.error('Error joining the game:', err);\r\n            setMessage('Error joining the game. Please check the Game ID and try again.');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h2>Join Game</h2>\r\n            <input\r\n                type=\"text\"\r\n                placeholder=\"Enter your name\"\r\n                value={playerName}\r\n                onChange={(e) => setPlayerName(e.target.value)}\r\n            />\r\n            {!initialGameId && (\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"Enter Game ID\"\r\n                    value={gameId}\r\n                    onChange={(e) => setGameId(e.target.value)}\r\n                />\r\n            )}\r\n            <button onClick={handleJoinGame}>Join Game</button>\r\n            {message && <p>{message}</p>}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default JoinGame;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}