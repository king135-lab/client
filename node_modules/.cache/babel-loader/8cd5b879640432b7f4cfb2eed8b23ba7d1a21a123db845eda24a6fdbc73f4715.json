{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ademm\\\\Documents\\\\Projects\\\\number-position-game\\\\client\\\\src\\\\components\\\\JoinGame.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst JoinGame = ({\n  gameId\n}) => {\n  _s();\n  const [playerName, setPlayerName] = useState('');\n  const [message, setMessage] = useState('');\n  const [gameData, setGameData] = useState(null);\n  const navigate = useNavigate();\n  const handleJoinGame = () => {\n    if (!playerName) {\n      console.error('Player name is not defined!');\n      setMessage('Player name is required!');\n      return;\n    }\n    if (gameData && gameData.players.length === 2) {\n      console.log('Game already has two players');\n      setMessage('Game already has two players.');\n      return;\n    }\n    console.log('Joining game with the following data:', {\n      gameId,\n      playerName\n    });\n\n    // Send request to join the game\n    axios.post(`http://localhost:5000/api/games/join`, {\n      gameId,\n      player: playerName\n    }).then(response => {\n      console.log('Player joined the game:', response.data);\n      setMessage('Player joined the game!');\n      setGameData(response.data.game);\n\n      // If this is the second player, navigate to the secret code page\n      if (response.data.game.players.length === 2) {\n        setMessage('Both players are now in the game. The game will start.');\n        // Navigate to the secret code page for the second player\n        navigate(`/secretcode/j/${gameId}`, {\n          state: {\n            playerName,\n            role: 'joiner'\n          }\n        });\n      }\n    }).catch(err => {\n      console.error('Error joining the game:', err);\n      setMessage('Error joining the game');\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Join Game\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Enter your name\",\n      value: playerName,\n      onChange: e => setPlayerName(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleJoinGame,\n      children: \"Join Game\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 25\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 9\n  }, this);\n};\n_s(JoinGame, \"MfzCiPZRA2rJnTBkmoYIBAWXKKw=\", false, function () {\n  return [useNavigate];\n});\n_c = JoinGame;\nexport default JoinGame;\nvar _c;\n$RefreshReg$(_c, \"JoinGame\");","map":{"version":3,"names":["React","useState","axios","useNavigate","jsxDEV","_jsxDEV","JoinGame","gameId","_s","playerName","setPlayerName","message","setMessage","gameData","setGameData","navigate","handleJoinGame","console","error","players","length","log","post","player","then","response","data","game","state","role","catch","err","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["C:/Users/ademm/Documents/Projects/number-position-game/client/src/components/JoinGame.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst JoinGame = ({ gameId }) => {\r\n    const [playerName, setPlayerName] = useState('');\r\n    const [message, setMessage] = useState('');\r\n    const [gameData, setGameData] = useState(null);\r\n    const navigate = useNavigate();\r\n\r\n    const handleJoinGame = () => {\r\n        if (!playerName) {\r\n            console.error('Player name is not defined!');\r\n            setMessage('Player name is required!');\r\n            return;\r\n        }\r\n\r\n        if (gameData && gameData.players.length === 2) {\r\n            console.log('Game already has two players');\r\n            setMessage('Game already has two players.');\r\n            return;\r\n        }\r\n\r\n        console.log('Joining game with the following data:', { gameId, playerName });\r\n\r\n        // Send request to join the game\r\n        axios.post(`http://localhost:5000/api/games/join`, { gameId, player: playerName })\r\n            .then(response => {\r\n                console.log('Player joined the game:', response.data);\r\n                setMessage('Player joined the game!');\r\n                setGameData(response.data.game);\r\n\r\n                // If this is the second player, navigate to the secret code page\r\n                if (response.data.game.players.length === 2) {\r\n                    setMessage('Both players are now in the game. The game will start.');\r\n                    // Navigate to the secret code page for the second player\r\n                    navigate(`/secretcode/j/${gameId}`, { state: { playerName, role: 'joiner' } });\r\n                }\r\n            })\r\n            .catch(err => {\r\n                console.error('Error joining the game:', err);\r\n                setMessage('Error joining the game');\r\n            });\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h2>Join Game</h2>\r\n            <input\r\n                type=\"text\"\r\n                placeholder=\"Enter your name\"\r\n                value={playerName}\r\n                onChange={(e) => setPlayerName(e.target.value)}\r\n            />\r\n            <button onClick={handleJoinGame}>Join Game</button>\r\n            {message && <p>{message}</p>}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default JoinGame;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}