{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ademm\\\\Documents\\\\Projects\\\\number-position-game\\\\client\\\\src\\\\components\\\\CreateGame.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\n// src/components/CreateGame.js\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CreateGame = () => {\n  _s();\n  const navigate = useNavigate();\n  const location = useLocation();\n  const [playerName, setPlayerName] = useState('');\n  const [gameId, setGameId] = useState('');\n  const [message, setMessage] = useState('');\n\n  // (Optional) If coming from another route, pick up playerName from location.state.\n  useEffect(() => {\n    if (location.state && location.state.playerName) {\n      setPlayerName(location.state.playerName);\n    }\n  }, [location]);\n  const handleCreateGame = async () => {\n    if (!playerName) {\n      alert('Please enter your name');\n      return;\n    }\n    try {\n      const response = await axios.post('http://localhost:5000/api/games', {\n        playerName\n      });\n      setGameId(response.data.gameId);\n      setMessage(response.data.message);\n    } catch (err) {\n      console.error('Error creating game:', err);\n      setMessage('Error creating game');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Create Game\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), !gameId && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter your name\",\n        value: playerName,\n        onChange: e => setPlayerName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleCreateGame,\n        children: \"Create Game\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 17\n    }, this), gameId && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Your Game Code: \", gameId]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Share this game code with Player 2. Once they join, you will both be redirected to set your secret codes.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Waiting for Player 2 to join...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(PlayerJoinPoll, {\n        gameId: gameId,\n        playerName: playerName,\n        navigate: navigate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n};\n\n// Polling component: checks every 3 seconds whether the game now has two players\n_s(CreateGame, \"4G7r9QQ7QYNy6jK3qUNLuqeFTTU=\", false, function () {\n  return [useNavigate, useLocation];\n});\n_c = CreateGame;\nconst PlayerJoinPoll = ({\n  gameId,\n  playerName,\n  navigate\n}) => {\n  _s2();\n  useEffect(() => {\n    const interval = setInterval(async () => {\n      try {\n        const response = await axios.get(`http://localhost:5000/api/games/${gameId}`);\n        const game = response.data;\n        // If two players have joined and the status is waiting for secret codes…\n        if (game.players.length === 2 && game.status === 'waitingForSecret') {\n          navigate(`/${playerName}/setsecretcode/${gameId}`);\n        }\n      } catch (err) {\n        console.error('Error polling game status:', err);\n      }\n    }, 3000);\n    return () => clearInterval(interval);\n  }, [gameId, playerName, navigate]);\n  return null;\n};\n_s2(PlayerJoinPoll, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c2 = PlayerJoinPoll;\nexport default CreateGame;\nvar _c, _c2;\n$RefreshReg$(_c, \"CreateGame\");\n$RefreshReg$(_c2, \"PlayerJoinPoll\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","useLocation","axios","jsxDEV","_jsxDEV","CreateGame","_s","navigate","location","playerName","setPlayerName","gameId","setGameId","message","setMessage","state","handleCreateGame","alert","response","post","data","err","console","error","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","PlayerJoinPoll","_c","_s2","interval","setInterval","get","game","players","length","status","clearInterval","_c2","$RefreshReg$"],"sources":["C:/Users/ademm/Documents/Projects/number-position-game/client/src/components/CreateGame.js"],"sourcesContent":["// src/components/CreateGame.js\r\nimport React, { useState, useEffect } from 'react';\r\nimport { useNavigate, useLocation } from 'react-router-dom';\r\nimport axios from 'axios';\r\n\r\nconst CreateGame = () => {\r\n    const navigate = useNavigate();\r\n    const location = useLocation();\r\n    const [playerName, setPlayerName] = useState('');\r\n    const [gameId, setGameId] = useState('');\r\n    const [message, setMessage] = useState('');\r\n\r\n    // (Optional) If coming from another route, pick up playerName from location.state.\r\n    useEffect(() => {\r\n        if (location.state && location.state.playerName) {\r\n            setPlayerName(location.state.playerName);\r\n        }\r\n    }, [location]);\r\n\r\n    const handleCreateGame = async () => {\r\n        if (!playerName) {\r\n            alert('Please enter your name');\r\n            return;\r\n        }\r\n        try {\r\n            const response = await axios.post('http://localhost:5000/api/games', { playerName });\r\n            setGameId(response.data.gameId);\r\n            setMessage(response.data.message);\r\n        } catch (err) {\r\n            console.error('Error creating game:', err);\r\n            setMessage('Error creating game');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h2>Create Game</h2>\r\n            {!gameId && (\r\n                <div>\r\n                    <input\r\n                        type=\"text\"\r\n                        placeholder=\"Enter your name\"\r\n                        value={playerName}\r\n                        onChange={(e) => setPlayerName(e.target.value)}\r\n                    />\r\n                    <button onClick={handleCreateGame}>Create Game</button>\r\n                </div>\r\n            )}\r\n            {gameId && (\r\n                <div>\r\n                    <h3>Your Game Code: {gameId}</h3>\r\n                    <p>{message}</p>\r\n                    <p>Share this game code with Player 2. Once they join, you will both be redirected to set your secret codes.</p>\r\n                    <p>Waiting for Player 2 to join...</p>\r\n                    <PlayerJoinPoll gameId={gameId} playerName={playerName} navigate={navigate} />\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\n// Polling component: checks every 3 seconds whether the game now has two players\r\nconst PlayerJoinPoll = ({ gameId, playerName, navigate }) => {\r\n    useEffect(() => {\r\n        const interval = setInterval(async () => {\r\n            try {\r\n                const response = await axios.get(`http://localhost:5000/api/games/${gameId}`);\r\n                const game = response.data;\r\n                // If two players have joined and the status is waiting for secret codes…\r\n                if (game.players.length === 2 && game.status === 'waitingForSecret') {\r\n                    navigate(`/${playerName}/setsecretcode/${gameId}`);\r\n                }\r\n            } catch (err) {\r\n                console.error('Error polling game status:', err);\r\n            }\r\n        }, 3000);\r\n        return () => clearInterval(interval);\r\n    }, [gameId, playerName, navigate]);\r\n    return null;\r\n};\r\n\r\nexport default CreateGame;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}