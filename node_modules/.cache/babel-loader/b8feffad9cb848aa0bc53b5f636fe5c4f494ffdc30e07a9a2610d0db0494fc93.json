{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ademm\\\\Documents\\\\Projects\\\\number-position-game\\\\client\\\\src\\\\components\\\\CreateGame.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CreateGame = () => {\n  _s();\n  const [gameName, setGameName] = useState('');\n  const [playerName, setPlayerName] = useState('');\n  const navigate = useNavigate();\n  const handleCreateGame = () => {\n    if (!gameName || !playerName) {\n      alert('Please fill in both fields!');\n      return;\n    }\n    // For now, we'll just navigate to the game page (you can replace this with actual game creation logic)\n    navigate(`/game/${gameName}`);\n  };\n  const handleJoinGame = () => {\n    if (!gameName || !playerName) {\n      alert('Please fill in both fields!');\n      return;\n    }\n    // For now, we'll just navigate to the game page (you can replace this with actual game joining logic)\n    navigate(`/game/${gameName}`);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"game-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Welcome to the Game!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Start a new game or join an existing one.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter your name\",\n        value: playerName,\n        onChange: e => setPlayerName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter game name\",\n        value: gameName,\n        onChange: e => setGameName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"button\",\n        onClick: handleCreateGame,\n        children: \"Start New Game\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"button\",\n        onClick: handleJoinGame,\n        children: \"Join Existing Game\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n};\n_s(CreateGame, \"i3Tu/4NmwvnaQrVKdzwUSqRJfWU=\", false, function () {\n  return [useNavigate];\n});\n_c = CreateGame;\nexport default CreateGame;\nvar _c;\n$RefreshReg$(_c, \"CreateGame\");","map":{"version":3,"names":["React","useState","useNavigate","jsxDEV","_jsxDEV","CreateGame","_s","gameName","setGameName","playerName","setPlayerName","navigate","handleCreateGame","alert","handleJoinGame","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["C:/Users/ademm/Documents/Projects/number-position-game/client/src/components/CreateGame.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst CreateGame = () => {\r\n    const [gameName, setGameName] = useState('');\r\n    const [playerName, setPlayerName] = useState('');\r\n    const navigate = useNavigate();\r\n\r\n    const handleCreateGame = () => {\r\n        if (!gameName || !playerName) {\r\n            alert('Please fill in both fields!');\r\n            return;\r\n        }\r\n        // For now, we'll just navigate to the game page (you can replace this with actual game creation logic)\r\n        navigate(`/game/${gameName}`);\r\n    };\r\n\r\n    const handleJoinGame = () => {\r\n        if (!gameName || !playerName) {\r\n            alert('Please fill in both fields!');\r\n            return;\r\n        }\r\n        // For now, we'll just navigate to the game page (you can replace this with actual game joining logic)\r\n        navigate(`/game/${gameName}`);\r\n    };\r\n\r\n    return (\r\n        <div className=\"game-container\">\r\n            <h1>Welcome to the Game!</h1>\r\n            <p>Start a new game or join an existing one.</p>\r\n\r\n            <div className=\"form-container\">\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"Enter your name\"\r\n                    value={playerName}\r\n                    onChange={(e) => setPlayerName(e.target.value)}\r\n                />\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"Enter game name\"\r\n                    value={gameName}\r\n                    onChange={(e) => setGameName(e.target.value)}\r\n                />\r\n                <button className=\"button\" onClick={handleCreateGame}>\r\n                    Start New Game\r\n                </button>\r\n                <button className=\"button\" onClick={handleJoinGame}>\r\n                    Join Existing Game\r\n                </button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CreateGame;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACQ,UAAU,EAAEC,aAAa,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAMU,QAAQ,GAAGT,WAAW,CAAC,CAAC;EAE9B,MAAMU,gBAAgB,GAAGA,CAAA,KAAM;IAC3B,IAAI,CAACL,QAAQ,IAAI,CAACE,UAAU,EAAE;MAC1BI,KAAK,CAAC,6BAA6B,CAAC;MACpC;IACJ;IACA;IACAF,QAAQ,CAAC,SAASJ,QAAQ,EAAE,CAAC;EACjC,CAAC;EAED,MAAMO,cAAc,GAAGA,CAAA,KAAM;IACzB,IAAI,CAACP,QAAQ,IAAI,CAACE,UAAU,EAAE;MAC1BI,KAAK,CAAC,6BAA6B,CAAC;MACpC;IACJ;IACA;IACAF,QAAQ,CAAC,SAASJ,QAAQ,EAAE,CAAC;EACjC,CAAC;EAED,oBACIH,OAAA;IAAKW,SAAS,EAAC,gBAAgB;IAAAC,QAAA,gBAC3BZ,OAAA;MAAAY,QAAA,EAAI;IAAoB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC7BhB,OAAA;MAAAY,QAAA,EAAG;IAAyC;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,eAEhDhB,OAAA;MAAKW,SAAS,EAAC,gBAAgB;MAAAC,QAAA,gBAC3BZ,OAAA;QACIiB,IAAI,EAAC,MAAM;QACXC,WAAW,EAAC,iBAAiB;QAC7BC,KAAK,EAAEd,UAAW;QAClBe,QAAQ,EAAGC,CAAC,IAAKf,aAAa,CAACe,CAAC,CAACC,MAAM,CAACH,KAAK;MAAE;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAClD,CAAC,eACFhB,OAAA;QACIiB,IAAI,EAAC,MAAM;QACXC,WAAW,EAAC,iBAAiB;QAC7BC,KAAK,EAAEhB,QAAS;QAChBiB,QAAQ,EAAGC,CAAC,IAAKjB,WAAW,CAACiB,CAAC,CAACC,MAAM,CAACH,KAAK;MAAE;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAChD,CAAC,eACFhB,OAAA;QAAQW,SAAS,EAAC,QAAQ;QAACY,OAAO,EAAEf,gBAAiB;QAAAI,QAAA,EAAC;MAEtD;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACThB,OAAA;QAAQW,SAAS,EAAC,QAAQ;QAACY,OAAO,EAAEb,cAAe;QAAAE,QAAA,EAAC;MAEpD;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACR,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd,CAAC;AAACd,EAAA,CAlDID,UAAU;EAAA,QAGKH,WAAW;AAAA;AAAA0B,EAAA,GAH1BvB,UAAU;AAoDhB,eAAeA,UAAU;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}