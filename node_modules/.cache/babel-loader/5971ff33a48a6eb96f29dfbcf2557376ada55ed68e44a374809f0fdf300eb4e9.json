{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ademm\\\\Documents\\\\Projects\\\\number-position-game\\\\client\\\\src\\\\components\\\\SecretCodePage.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SecretCodePage = ({\n  role\n}) => {\n  _s();\n  const {\n    gameId\n  } = useParams();\n  const navigate = useNavigate();\n  const [secretNumber, setSecretNumber] = useState('');\n  const [opponentReady, setOpponentReady] = useState(false);\n  const [message, setMessage] = useState('Waiting for both players to set their secret numbers.');\n  const isValidSecretNumber = number => {\n    const digits = number.split('');\n    return digits.length === 4 && new Set(digits).size === 4 && /^\\d{4}$/.test(number);\n  };\n  useEffect(() => {\n    const interval = setInterval(() => {\n      // Check if opponent has set their secret number\n      axios.get(`http://localhost:5000/api/games/${gameId}`).then(response => {\n        const data = response.data;\n        if (role === 'creator' && data.secretNumber2) {\n          setOpponentReady(true);\n        } else if (role === 'joiner' && data.secretNumber1) {\n          setOpponentReady(true);\n        }\n        if (data.secretNumber1 && data.secretNumber2) {\n          setMessage('Both players are ready. Redirecting...');\n          setTimeout(() => {\n            navigate(`/game/${role === 'creator' ? 'c' : 'j'}/${gameId}`);\n          }, 2000);\n        }\n      }).catch(err => console.error('Error fetching game status:', err));\n    }, 3000); // Poll every 3 seconds\n    return () => clearInterval(interval);\n  }, [gameId, role, navigate]);\n  const handleSetSecretNumber = () => {\n    if (!isValidSecretNumber(secretNumber)) {\n      setMessage('Secret number must be 4 unique digits.');\n      return;\n    }\n    axios.post(`http://localhost:5000/api/games/secret`, {\n      gameId,\n      secretNumber,\n      player: role\n    }).then(() => {\n      setMessage('Secret number set! Waiting for your opponent...');\n    }).catch(err => {\n      console.error('Error setting secret number:', err);\n      setMessage('Failed to set secret number. Try again.');\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [role === 'creator' ? 'Player 1' : 'Player 2', \" - Secret Code Setup\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Game ID: \", gameId]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Enter your secret number (4 unique digits):\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: secretNumber,\n        onChange: e => setSecretNumber(e.target.value),\n        maxLength: 4,\n        placeholder: \"Secret Number\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSetSecretNumber,\n        children: \"Set Secret Number\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Your opponent's status: \", opponentReady ? 'Ready!' : 'Not ready yet']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 9\n  }, this);\n};\n_s(SecretCodePage, \"2mlbns53ZjhIeDeyGVex6hvXItg=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = SecretCodePage;\nexport default SecretCodePage;\nvar _c;\n$RefreshReg$(_c, \"SecretCodePage\");","map":{"version":3,"names":["React","useEffect","useState","useNavigate","useParams","axios","jsxDEV","_jsxDEV","SecretCodePage","role","_s","gameId","navigate","secretNumber","setSecretNumber","opponentReady","setOpponentReady","message","setMessage","isValidSecretNumber","number","digits","split","length","Set","size","test","interval","setInterval","get","then","response","data","secretNumber2","secretNumber1","setTimeout","catch","err","console","error","clearInterval","handleSetSecretNumber","post","player","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","maxLength","placeholder","onClick","_c","$RefreshReg$"],"sources":["C:/Users/ademm/Documents/Projects/number-position-game/client/src/components/SecretCodePage.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useNavigate, useParams } from 'react-router-dom';\r\nimport axios from 'axios';\r\n\r\nconst SecretCodePage = ({ role }) => {\r\n    const { gameId } = useParams();\r\n    const navigate = useNavigate();\r\n    const [secretNumber, setSecretNumber] = useState('');\r\n    const [opponentReady, setOpponentReady] = useState(false);\r\n    const [message, setMessage] = useState('Waiting for both players to set their secret numbers.');\r\n\r\n    const isValidSecretNumber = (number) => {\r\n        const digits = number.split('');\r\n        return digits.length === 4 && new Set(digits).size === 4 && /^\\d{4}$/.test(number);\r\n    };\r\n\r\n    useEffect(() => {\r\n        const interval = setInterval(() => {\r\n            // Check if opponent has set their secret number\r\n            axios.get(`http://localhost:5000/api/games/${gameId}`)\r\n                .then(response => {\r\n                    const data = response.data;\r\n                    if (role === 'creator' && data.secretNumber2) {\r\n                        setOpponentReady(true);\r\n                    } else if (role === 'joiner' && data.secretNumber1) {\r\n                        setOpponentReady(true);\r\n                    }\r\n                    if (data.secretNumber1 && data.secretNumber2) {\r\n                        setMessage('Both players are ready. Redirecting...');\r\n                        setTimeout(() => {\r\n                            navigate(`/game/${role === 'creator' ? 'c' : 'j'}/${gameId}`);\r\n                        }, 2000);\r\n                    }\r\n                })\r\n                .catch(err => console.error('Error fetching game status:', err));\r\n        }, 3000);  // Poll every 3 seconds\r\n        return () => clearInterval(interval);\r\n    }, [gameId, role, navigate]);\r\n\r\n    const handleSetSecretNumber = () => {\r\n        if (!isValidSecretNumber(secretNumber)) {\r\n            setMessage('Secret number must be 4 unique digits.');\r\n            return;\r\n        }\r\n        axios.post(`http://localhost:5000/api/games/secret`, {\r\n            gameId,\r\n            secretNumber,\r\n            player: role\r\n        })\r\n            .then(() => {\r\n                setMessage('Secret number set! Waiting for your opponent...');\r\n            })\r\n            .catch(err => {\r\n                console.error('Error setting secret number:', err);\r\n                setMessage('Failed to set secret number. Try again.');\r\n            });\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h1>{role === 'creator' ? 'Player 1' : 'Player 2'} - Secret Code Setup</h1>\r\n            <p>Game ID: {gameId}</p>\r\n            <p>{message}</p>\r\n            <div>\r\n                <label>Enter your secret number (4 unique digits):</label>\r\n                <input\r\n                    type=\"text\"\r\n                    value={secretNumber}\r\n                    onChange={(e) => setSecretNumber(e.target.value)}\r\n                    maxLength={4}\r\n                    placeholder=\"Secret Number\"\r\n                />\r\n                <button onClick={handleSetSecretNumber}>Set Secret Number</button>\r\n            </div>\r\n            <p>Your opponent's status: {opponentReady ? 'Ready!' : 'Not ready yet'}</p>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SecretCodePage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}