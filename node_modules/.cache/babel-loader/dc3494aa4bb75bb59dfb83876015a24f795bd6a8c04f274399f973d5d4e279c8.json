{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ademm\\\\Documents\\\\Projects\\\\number-position-game\\\\client\\\\src\\\\components\\\\CreateGame.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport './CreateGame.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst CreateGame = () => {\n  _s();\n  const {\n    state\n  } = useLocation();\n  const [playerName, setPlayerName] = useState(state ? state.playerName : '');\n  const [gameId, setGameId] = useState('');\n  const [gameStatus, setGameStatus] = useState('waiting'); // initial status is 'waiting'\n  const [secretNumber, setSecretNumber] = useState('');\n  const [isSecretNumberSet, setIsSecretNumberSet] = useState(false); // track secret number status\n  const [playerJoined, setPlayerJoined] = useState(false); // track if player 2 joins\n  const navigate = useNavigate();\n  useEffect(() => {\n    // If no player information exists in state, navigate back to home\n    if (!state) {\n      alert('No player information found!');\n      navigate('/');\n    }\n  }, [state, navigate]);\n\n  // Game creation logic: POST request to create game\n  useEffect(() => {\n    if (playerName && !gameId) {\n      axios.post('http://localhost:5000/api/games', {\n        players: [playerName]\n      }).then(response => {\n        setGameId(response.data.gameId); // Set the game ID from the response\n        setGameStatus('waiting'); // Ensure the status is 'waiting'\n      }).catch(error => {\n        console.error('Error starting the game:', error);\n      });\n    }\n  }, [playerName, gameId]);\n\n  // Once the second player joins, navigate to the game page\n  useEffect(() => {\n    if (playerJoined && gameId) {\n      navigate(`/game/${gameId}`, {\n        state: {\n          playerName: playerName\n        }\n      });\n    }\n  }, [playerJoined, gameId, navigate, playerName]);\n\n  // Handle player 2 joining the game\n  const handlePlayerJoin = () => {\n    setPlayerJoined(true); // Mark player as joined\n    setGameStatus('in-progress'); // Update game status\n  };\n\n  // Secret number validation and setter\n  const handleSecretNumberChange = e => {\n    const value = e.target.value;\n    if (value.length <= 4 && /^[0-9]*$/.test(value) && new Set(value).size === value.length) {\n      setSecretNumber(value); // Update secret number if it's valid\n    }\n  };\n\n  // Set the secret number for the current player\n  const handleSetSecretNumber = () => {\n    if (secretNumber.length === 4) {\n      // Submit the secret number to the backend\n      axios.post('http://localhost:5000/api/games/secret', {\n        gameId,\n        secretNumber\n      }).then(response => {\n        setIsSecretNumberSet(true); // Mark the secret number as set\n      }).catch(err => {\n        console.error('Error setting secret number:', err);\n      });\n    } else {\n      alert('Please enter a valid 4-digit unique number!');\n    }\n  };\n\n  // Fetch game data after creation or whenever the status changes\n  useEffect(() => {\n    if (gameId) {\n      axios.get(`http://localhost:5000/api/games/${gameId}`).then(response => {\n        setGameStatus(response.data.status); // Update game status from server\n      }).catch(error => {\n        console.error('Error fetching game data:', error);\n      });\n    }\n  }, [gameId]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"game-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Game ID: \", gameId || 'Loading...']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Welcome, \", playerName, \"!\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }, this), gameStatus === 'waiting' && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Waiting for another player to join...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"button\",\n        onClick: handlePlayerJoin,\n        children: \"Simulate Player Join (For Testing)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true), gameStatus === 'in-progress' && !isSecretNumberSet && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Set a secret number (4 unique digits):\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: secretNumber,\n        onChange: handleSecretNumberChange,\n        maxLength: 4,\n        placeholder: \"Enter secret number\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSetSecretNumber,\n        children: \"Set Secret Number\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 17\n    }, this), gameStatus === 'in-progress' && isSecretNumberSet && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Your secret number has been set! Waiting for the game to start...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 9\n  }, this);\n};\n_s(CreateGame, \"X2oPK1sGbkdBz/F0t8fdX7SN89g=\", false, function () {\n  return [useLocation, useNavigate];\n});\n_c = CreateGame;\nexport default CreateGame;\nvar _c;\n$RefreshReg$(_c, \"CreateGame\");","map":{"version":3,"names":["React","useState","useEffect","useLocation","useNavigate","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","CreateGame","_s","state","playerName","setPlayerName","gameId","setGameId","gameStatus","setGameStatus","secretNumber","setSecretNumber","isSecretNumberSet","setIsSecretNumberSet","playerJoined","setPlayerJoined","navigate","alert","post","players","then","response","data","catch","error","console","handlePlayerJoin","handleSecretNumberChange","e","value","target","length","test","Set","size","handleSetSecretNumber","err","get","status","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","type","onChange","maxLength","placeholder","_c","$RefreshReg$"],"sources":["C:/Users/ademm/Documents/Projects/number-position-game/client/src/components/CreateGame.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useLocation, useNavigate } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport './CreateGame.css';\r\n\r\nconst CreateGame = () => {\r\n    const { state } = useLocation();\r\n    const [playerName, setPlayerName] = useState(state ? state.playerName : '');\r\n    const [gameId, setGameId] = useState('');\r\n    const [gameStatus, setGameStatus] = useState('waiting'); // initial status is 'waiting'\r\n    const [secretNumber, setSecretNumber] = useState('');\r\n    const [isSecretNumberSet, setIsSecretNumberSet] = useState(false); // track secret number status\r\n    const [playerJoined, setPlayerJoined] = useState(false); // track if player 2 joins\r\n    const navigate = useNavigate();\r\n\r\n    useEffect(() => {\r\n        // If no player information exists in state, navigate back to home\r\n        if (!state) {\r\n            alert('No player information found!');\r\n            navigate('/');\r\n        }\r\n    }, [state, navigate]);\r\n\r\n    // Game creation logic: POST request to create game\r\n    useEffect(() => {\r\n        if (playerName && !gameId) {\r\n            axios\r\n                .post('http://localhost:5000/api/games', { players: [playerName] })\r\n                .then(response => {\r\n                    setGameId(response.data.gameId); // Set the game ID from the response\r\n                    setGameStatus('waiting'); // Ensure the status is 'waiting'\r\n                })\r\n                .catch(error => {\r\n                    console.error('Error starting the game:', error);\r\n                });\r\n        }\r\n    }, [playerName, gameId]);\r\n\r\n    // Once the second player joins, navigate to the game page\r\n    useEffect(() => {\r\n        if (playerJoined && gameId) {\r\n            navigate(`/game/${gameId}`, { state: { playerName: playerName } });\r\n        }\r\n    }, [playerJoined, gameId, navigate, playerName]);\r\n\r\n    // Handle player 2 joining the game\r\n    const handlePlayerJoin = () => {\r\n        setPlayerJoined(true); // Mark player as joined\r\n        setGameStatus('in-progress'); // Update game status\r\n    };\r\n\r\n    // Secret number validation and setter\r\n    const handleSecretNumberChange = (e) => {\r\n        const value = e.target.value;\r\n        if (value.length <= 4 && /^[0-9]*$/.test(value) && new Set(value).size === value.length) {\r\n            setSecretNumber(value); // Update secret number if it's valid\r\n        }\r\n    };\r\n\r\n    // Set the secret number for the current player\r\n    const handleSetSecretNumber = () => {\r\n        if (secretNumber.length === 4) {\r\n            // Submit the secret number to the backend\r\n            axios\r\n                .post('http://localhost:5000/api/games/secret', { gameId, secretNumber })\r\n                .then(response => {\r\n                    setIsSecretNumberSet(true); // Mark the secret number as set\r\n                })\r\n                .catch(err => {\r\n                    console.error('Error setting secret number:', err);\r\n                });\r\n        } else {\r\n            alert('Please enter a valid 4-digit unique number!');\r\n        }\r\n    };\r\n\r\n    // Fetch game data after creation or whenever the status changes\r\n    useEffect(() => {\r\n        if (gameId) {\r\n            axios\r\n                .get(`http://localhost:5000/api/games/${gameId}`)\r\n                .then(response => {\r\n                    setGameStatus(response.data.status); // Update game status from server\r\n                })\r\n                .catch(error => {\r\n                    console.error('Error fetching game data:', error);\r\n                });\r\n        }\r\n    }, [gameId]);\r\n\r\n    return (\r\n        <div className=\"game-container\">\r\n            <h1>Game ID: {gameId || 'Loading...'}</h1>\r\n            <p>Welcome, {playerName}!</p>\r\n            {gameStatus === 'waiting' && (\r\n                <>\r\n                    <p>Waiting for another player to join...</p>\r\n                    <button className=\"button\" onClick={handlePlayerJoin}>\r\n                        Simulate Player Join (For Testing)\r\n                    </button>\r\n                </>\r\n            )}\r\n\r\n            {gameStatus === 'in-progress' && !isSecretNumberSet && (\r\n                <div>\r\n                    <h2>Set a secret number (4 unique digits):</h2>\r\n                    <input\r\n                        type=\"text\"\r\n                        value={secretNumber}\r\n                        onChange={handleSecretNumberChange}\r\n                        maxLength={4}\r\n                        placeholder=\"Enter secret number\"\r\n                    />\r\n                    <button onClick={handleSetSecretNumber}>Set Secret Number</button>\r\n                </div>\r\n            )}\r\n\r\n            {gameStatus === 'in-progress' && isSecretNumberSet && (\r\n                <p>Your secret number has been set! Waiting for the game to start...</p>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CreateGame;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}