{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ademm\\\\Documents\\\\Projects\\\\number-position-game\\\\client\\\\src\\\\components\\\\Leaderboard.js\",\n  _s = $RefreshSig$();\n// src/components/Leaderboard.js\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './Leaderboard.css'; // Create styles as needed\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Leaderboard = () => {\n  _s();\n  const [leaders, setLeaders] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const fetchLeaderboard = async () => {\n    try {\n      // Add a timestamp query param and no-cache headers to force a fresh fetch\n      const res = await axios.get('http://localhost:5000/api/users/leaderboard', {\n        params: {\n          t: Date.now()\n        },\n        headers: {\n          'Cache-Control': 'no-cache'\n        }\n      });\n      console.log('Fetched leaderboard data:', res.data);\n      setLeaders(res.data);\n      setLoading(false);\n    } catch (err) {\n      console.error('Error fetching leaderboard:', err);\n      setLoading(false);\n    }\n  };\n\n  // Fetch leaderboard once on mount and then poll every 5 seconds.\n  useEffect(() => {\n    fetchLeaderboard();\n    const interval = setInterval(fetchLeaderboard, 5000);\n    return () => clearInterval(interval);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"leaderboard-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Leaderboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading leaderboard...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"leaderboard-table\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Rank\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Username\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Wins\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Losses\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Draws\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: leaders.map((user, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: index + 1\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: user.username\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: user.wins\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: user.losses\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: user.draws\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 33\n          }, this)]\n        }, user._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n};\n_s(Leaderboard, \"3SBSt2FUgu8crb2Zgci6EtXaTps=\");\n_c = Leaderboard;\nexport default Leaderboard;\nvar _c;\n$RefreshReg$(_c, \"Leaderboard\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","Leaderboard","_s","leaders","setLeaders","loading","setLoading","fetchLeaderboard","res","get","params","t","Date","now","headers","console","log","data","err","error","interval","setInterval","clearInterval","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","user","index","username","wins","losses","draws","_id","_c","$RefreshReg$"],"sources":["C:/Users/ademm/Documents/Projects/number-position-game/client/src/components/Leaderboard.js"],"sourcesContent":["// src/components/Leaderboard.js\r\nimport React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport './Leaderboard.css'; // Create styles as needed\r\n\r\nconst Leaderboard = () => {\r\n    const [leaders, setLeaders] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n\r\n    const fetchLeaderboard = async () => {\r\n        try {\r\n            // Add a timestamp query param and no-cache headers to force a fresh fetch\r\n            const res = await axios.get('http://localhost:5000/api/users/leaderboard', {\r\n                params: { t: Date.now() },\r\n                headers: { 'Cache-Control': 'no-cache' }\r\n            });\r\n            console.log('Fetched leaderboard data:', res.data);\r\n            setLeaders(res.data);\r\n            setLoading(false);\r\n        } catch (err) {\r\n            console.error('Error fetching leaderboard:', err);\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    // Fetch leaderboard once on mount and then poll every 5 seconds.\r\n    useEffect(() => {\r\n        fetchLeaderboard();\r\n        const interval = setInterval(fetchLeaderboard, 5000);\r\n        return () => clearInterval(interval);\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"leaderboard-container\">\r\n            <h2>Leaderboard</h2>\r\n            {loading ? (\r\n                <p>Loading leaderboard...</p>\r\n            ) : (\r\n                <table className=\"leaderboard-table\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Rank</th>\r\n                            <th>Username</th>\r\n                            <th>Wins</th>\r\n                            <th>Losses</th>\r\n                            <th>Draws</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {leaders.map((user, index) => (\r\n                            <tr key={user._id}>\r\n                                <td>{index + 1}</td>\r\n                                <td>{user.username}</td>\r\n                                <td>{user.wins}</td>\r\n                                <td>{user.losses}</td>\r\n                                <td>{user.draws}</td>\r\n                            </tr>\r\n                        ))}\r\n                    </tbody>\r\n                </table>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Leaderboard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}