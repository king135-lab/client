{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ademm\\\\Documents\\\\Projects\\\\number-position-game\\\\client\\\\src\\\\components\\\\JoinGame.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useParams, useHistory } from 'react-router-dom';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst JoinGame = () => {\n  _s();\n  const {\n    gameId\n  } = useParams(); // Get the game ID from the URL\n  const [playerId, setPlayerId] = useState('');\n  const [loading, setLoading] = useState(false);\n  const history = useHistory();\n  const handleJoinGame = async () => {\n    setLoading(true);\n    try {\n      await axios.post('/api/join-game', {\n        gameId,\n        playerId\n      });\n      history.push(`/game/${gameId}`); // Redirect to the game page after joining\n    } catch (error) {\n      console.error('Error joining game:', error);\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Join an Existing Game\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Enter Player ID\",\n      value: playerId,\n      onChange: e => setPlayerId(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleJoinGame,\n      disabled: loading,\n      children: loading ? 'Joining...' : 'Join Game'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }, this);\n};\n_s(JoinGame, \"kIsRxwI3CYK+fiQjP+EwimF16jk=\", false, function () {\n  return [useParams, useHistory];\n});\n_c = JoinGame;\nexport default JoinGame;\nvar _c;\n$RefreshReg$(_c, \"JoinGame\");","map":{"version":3,"names":["React","useState","useParams","useHistory","axios","jsxDEV","_jsxDEV","JoinGame","_s","gameId","playerId","setPlayerId","loading","setLoading","history","handleJoinGame","post","push","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","disabled","_c","$RefreshReg$"],"sources":["C:/Users/ademm/Documents/Projects/number-position-game/client/src/components/JoinGame.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useParams, useHistory } from 'react-router-dom';\r\nimport axios from 'axios';\r\n\r\nconst JoinGame = () => {\r\n    const { gameId } = useParams();  // Get the game ID from the URL\r\n    const [playerId, setPlayerId] = useState('');\r\n    const [loading, setLoading] = useState(false);\r\n    const history = useHistory();\r\n\r\n    const handleJoinGame = async () => {\r\n        setLoading(true);\r\n        try {\r\n            await axios.post('/api/join-game', { gameId, playerId });\r\n            history.push(`/game/${gameId}`);  // Redirect to the game page after joining\r\n        } catch (error) {\r\n            console.error('Error joining game:', error);\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h2>Join an Existing Game</h2>\r\n            <input\r\n                type=\"text\"\r\n                placeholder=\"Enter Player ID\"\r\n                value={playerId}\r\n                onChange={(e) => setPlayerId(e.target.value)}\r\n            />\r\n            <button onClick={handleJoinGame} disabled={loading}>\r\n                {loading ? 'Joining...' : 'Join Game'}\r\n            </button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default JoinGame;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,SAAS,EAAEC,UAAU,QAAQ,kBAAkB;AACxD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnB,MAAM;IAAEC;EAAO,CAAC,GAAGP,SAAS,CAAC,CAAC,CAAC,CAAE;EACjC,MAAM,CAACQ,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACW,OAAO,EAAEC,UAAU,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAMa,OAAO,GAAGX,UAAU,CAAC,CAAC;EAE5B,MAAMY,cAAc,GAAG,MAAAA,CAAA,KAAY;IAC/BF,UAAU,CAAC,IAAI,CAAC;IAChB,IAAI;MACA,MAAMT,KAAK,CAACY,IAAI,CAAC,gBAAgB,EAAE;QAAEP,MAAM;QAAEC;MAAS,CAAC,CAAC;MACxDI,OAAO,CAACG,IAAI,CAAC,SAASR,MAAM,EAAE,CAAC,CAAC,CAAE;IACtC,CAAC,CAAC,OAAOS,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC;MAC3CL,UAAU,CAAC,KAAK,CAAC;IACrB;EACJ,CAAC;EAED,oBACIP,OAAA;IAAAc,QAAA,gBACId,OAAA;MAAAc,QAAA,EAAI;IAAqB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC9BlB,OAAA;MACImB,IAAI,EAAC,MAAM;MACXC,WAAW,EAAC,iBAAiB;MAC7BC,KAAK,EAAEjB,QAAS;MAChBkB,QAAQ,EAAGC,CAAC,IAAKlB,WAAW,CAACkB,CAAC,CAACC,MAAM,CAACH,KAAK;IAAE;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChD,CAAC,eACFlB,OAAA;MAAQyB,OAAO,EAAEhB,cAAe;MAACiB,QAAQ,EAAEpB,OAAQ;MAAAQ,QAAA,EAC9CR,OAAO,GAAG,YAAY,GAAG;IAAW;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACR,CAAC;AAEd,CAAC;AAAChB,EAAA,CA/BID,QAAQ;EAAA,QACSL,SAAS,EAGZC,UAAU;AAAA;AAAA8B,EAAA,GAJxB1B,QAAQ;AAiCd,eAAeA,QAAQ;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}