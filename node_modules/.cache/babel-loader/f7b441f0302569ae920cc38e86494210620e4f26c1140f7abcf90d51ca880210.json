{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ademm\\\\Documents\\\\Projects\\\\number-position-game\\\\client\\\\src\\\\components\\\\GamePageCreator.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport NumberHelper from './NumberHelper';\nimport Timer from './Timer';\nimport './GamePageCreator.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst GamePageCreator = () => {\n  _s();\n  var _gameData$guesses, _gameData$guesses2;\n  const {\n    gameId\n  } = useParams();\n  const navigate = useNavigate();\n  const [gameData, setGameData] = useState(null);\n  const [guess, setGuess] = useState('');\n  const [guessMessage, setGuessMessage] = useState('');\n  const [turnTrigger, setTurnTrigger] = useState(null);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const res = await axios.get(`http://localhost:5000/api/games/${gameId}`);\n        setGameData(res.data);\n        setTurnTrigger(res.data.turn);\n      } catch (err) {\n        console.error('Error fetching game data:', err);\n      }\n    };\n    const interval = setInterval(fetchData, 3000);\n    fetchData();\n    return () => clearInterval(interval);\n  }, [gameId]);\n  useEffect(() => {\n    const checkTimeout = async () => {\n      if ((gameData === null || gameData === void 0 ? void 0 : gameData.timeRemaining) <= 0 && myTurn && !finished) {\n        try {\n          await axios.post('/api/games/timeout', {\n            gameId\n          });\n          setGuessMessage('Time is up! Turn skipped.');\n        } catch (err) {\n          console.error('Error handling timeout:', err);\n        }\n      }\n    };\n    checkTimeout();\n  }, [gameData]);\n  if (!gameData) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading game data...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 27\n  }, this);\n  const myGuesses = ((_gameData$guesses = gameData.guesses) !== null && _gameData$guesses !== void 0 ? _gameData$guesses : []).filter(g => g.player === gameData.players[0]);\n  const oppGuesses = ((_gameData$guesses2 = gameData.guesses) !== null && _gameData$guesses2 !== void 0 ? _gameData$guesses2 : []).filter(g => g.player === gameData.players[1]);\n  const playerName = gameData.players[0];\n  const myTurn = gameData.turn === playerName;\n  const finished = gameData.status === 'finished';\n  const handleSubmitGuess = async e => {\n    e.preventDefault();\n    if (!guess) {\n      alert('Please enter a guess.');\n      return;\n    }\n    try {\n      const res = await axios.post('http://localhost:5000/api/games/guess', {\n        gameId,\n        player: playerName,\n        guess\n      });\n      setGuessMessage(res.data.message);\n      setGuess('');\n    } catch (err) {\n      var _err$response, _err$response$data;\n      setGuessMessage(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.message) || 'Error submitting guess');\n    }\n  };\n  const onTimeUp = async () => {\n    if (myTurn && !finished) {\n      try {\n        await axios.post('http://localhost:5000/api/games/guess', {\n          gameId,\n          player: playerName,\n          guess: ''\n        });\n        setGuessMessage('Time is up! Turn skipped.');\n        await axios.post('http://localhost:5000/api/games/update', {\n          gameId,\n          player: playerName,\n          guess: '-',\n          numbersCorrect: '-',\n          positionsCorrect: '-'\n        });\n        await axios.post('http://localhost:5000/api/games/nextTurn', {\n          gameId\n        });\n      } catch (err) {\n        console.error('Error handling timeout:', err);\n      }\n    }\n  };\n  let outcomeMessage = '';\n  if (finished) {\n    if (gameData.winner === \"draw\") {\n      outcomeMessage = \"It's a draw!\";\n    } else if (gameData.winner === playerName) {\n      outcomeMessage = \"Congratulations! You win!\";\n    } else {\n      outcomeMessage = \"You lost! Better luck next time!\";\n    }\n  }\n  const handleResetGame = async () => {\n    try {\n      await axios.post('http://localhost:5000/api/games/reset', {\n        gameId\n      });\n      navigate('/');\n    } catch (err) {\n      console.error('Error resetting game:', err);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Player 1 Game Page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Your Secret Code: \", gameData.secretCode1]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Turn:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 16\n      }, this), \" \", gameData.turn || 'Not set']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 13\n    }, this), !finished && /*#__PURE__*/_jsxDEV(Timer, {\n      initialTime: gameData.timeRemaining,\n      onTimeUp: onTimeUp,\n      resetTrigger: turnTrigger\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 27\n    }, this), finished && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Game Over\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: outcomeMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => navigate('/'),\n        children: \"Go to Home Page\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleResetGame,\n        children: \"Restart Game\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 17\n    }, this), !finished && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          justifyContent: 'space-between'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            width: '48%'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Your Guess History\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 29\n          }, this), myGuesses.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"No guesses yet.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 33\n          }, this) : /*#__PURE__*/_jsxDEV(\"table\", {\n            border: \"1\",\n            children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n              children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Guess\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 137,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Numbers Correct\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 138,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Positions Correct\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 139,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 136,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n              children: myGuesses.map((g, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: g.guess\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 145,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: g.numbersCorrect\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 146,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: g.positionsCorrect\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 147,\n                  columnNumber: 49\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 144,\n                columnNumber: 45\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            width: '48%'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Opponent's Guess History\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 29\n          }, this), oppGuesses.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"No guesses yet.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 33\n          }, this) : /*#__PURE__*/_jsxDEV(\"table\", {\n            border: \"1\",\n            children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n              children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Guess\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 162,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Numbers Correct\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 163,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Positions Correct\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 164,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 161,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n              children: oppGuesses.map((g, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: g.guess\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 170,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: g.numbersCorrect\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 171,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: g.positionsCorrect\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 172,\n                  columnNumber: 49\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 169,\n                columnNumber: 45\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 167,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 21\n      }, this), myTurn ? /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmitGuess,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Enter your guess\",\n          value: guess,\n          onChange: e => setGuess(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Submit Guess\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 25\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Waiting for your turn...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(NumberHelper, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 21\n      }, this), guessMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: guessMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 38\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 113,\n    columnNumber: 9\n  }, this);\n};\n_s(GamePageCreator, \"w6DrxetIPF14tHO9sh6PNtZBY2U=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = GamePageCreator;\nexport default GamePageCreator;\nvar _c;\n$RefreshReg$(_c, \"GamePageCreator\");","map":{"version":3,"names":["React","useState","useEffect","useParams","useNavigate","axios","NumberHelper","Timer","jsxDEV","_jsxDEV","Fragment","_Fragment","GamePageCreator","_s","_gameData$guesses","_gameData$guesses2","gameId","navigate","gameData","setGameData","guess","setGuess","guessMessage","setGuessMessage","turnTrigger","setTurnTrigger","fetchData","res","get","data","turn","err","console","error","interval","setInterval","clearInterval","checkTimeout","timeRemaining","myTurn","finished","post","children","fileName","_jsxFileName","lineNumber","columnNumber","myGuesses","guesses","filter","g","player","players","oppGuesses","playerName","status","handleSubmitGuess","e","preventDefault","alert","message","_err$response","_err$response$data","response","onTimeUp","numbersCorrect","positionsCorrect","outcomeMessage","winner","handleResetGame","secretCode1","initialTime","resetTrigger","onClick","style","display","justifyContent","width","length","border","map","index","onSubmit","type","placeholder","value","onChange","target","_c","$RefreshReg$"],"sources":["C:/Users/ademm/Documents/Projects/number-position-game/client/src/components/GamePageCreator.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useParams, useNavigate } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport NumberHelper from './NumberHelper';\r\nimport Timer from './Timer';\r\nimport './GamePageCreator.css';\r\n\r\nconst GamePageCreator = () => {\r\n    const { gameId } = useParams();\r\n    const navigate = useNavigate();\r\n    const [gameData, setGameData] = useState(null);\r\n    const [guess, setGuess] = useState('');\r\n    const [guessMessage, setGuessMessage] = useState('');\r\n    const [turnTrigger, setTurnTrigger] = useState(null);\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            try {\r\n                const res = await axios.get(`http://localhost:5000/api/games/${gameId}`);\r\n                setGameData(res.data);\r\n                setTurnTrigger(res.data.turn);\r\n            } catch (err) {\r\n                console.error('Error fetching game data:', err);\r\n            }\r\n        };\r\n\r\n        const interval = setInterval(fetchData, 3000);\r\n        fetchData();\r\n        return () => clearInterval(interval);\r\n    }, [gameId]);\r\n\r\n    useEffect(() => {\r\n        const checkTimeout = async () => {\r\n            if (gameData?.timeRemaining <= 0 && myTurn && !finished) {\r\n                try {\r\n                    await axios.post('/api/games/timeout', { gameId });\r\n                    setGuessMessage('Time is up! Turn skipped.');\r\n                } catch (err) {\r\n                    console.error('Error handling timeout:', err);\r\n                }\r\n            }\r\n        };\r\n        checkTimeout();\r\n    }, [gameData]);\r\n\r\n    if (!gameData) return <p>Loading game data...</p>;\r\n\r\n    const myGuesses = (gameData.guesses ?? []).filter(g => g.player === gameData.players[0]);\r\n    const oppGuesses = (gameData.guesses ?? []).filter(g => g.player === gameData.players[1]);\r\n    const playerName = gameData.players[0];\r\n    const myTurn = gameData.turn === playerName;\r\n    const finished = gameData.status === 'finished';\r\n\r\n    const handleSubmitGuess = async (e) => {\r\n        e.preventDefault();\r\n        if (!guess) {\r\n            alert('Please enter a guess.');\r\n            return;\r\n        }\r\n        try {\r\n            const res = await axios.post('http://localhost:5000/api/games/guess', {\r\n                gameId,\r\n                player: playerName,\r\n                guess\r\n            });\r\n            setGuessMessage(res.data.message);\r\n            setGuess('');\r\n        } catch (err) {\r\n            setGuessMessage(err.response?.data?.message || 'Error submitting guess');\r\n        }\r\n    };\r\n\r\n    const onTimeUp = async () => {\r\n        if (myTurn && !finished) {\r\n            try {\r\n                await axios.post('http://localhost:5000/api/games/guess', { gameId, player: playerName, guess: '' });\r\n                setGuessMessage('Time is up! Turn skipped.');\r\n                await axios.post('http://localhost:5000/api/games/update', {\r\n                    gameId,\r\n                    player: playerName,\r\n                    guess: '-',\r\n                    numbersCorrect: '-',\r\n                    positionsCorrect: '-'\r\n                });\r\n                await axios.post('http://localhost:5000/api/games/nextTurn', { gameId });\r\n            } catch (err) {\r\n                console.error('Error handling timeout:', err);\r\n            }\r\n        }\r\n    };\r\n\r\n    let outcomeMessage = '';\r\n    if (finished) {\r\n        if (gameData.winner === \"draw\") {\r\n            outcomeMessage = \"It's a draw!\";\r\n        } else if (gameData.winner === playerName) {\r\n            outcomeMessage = \"Congratulations! You win!\";\r\n        } else {\r\n            outcomeMessage = \"You lost! Better luck next time!\";\r\n        }\r\n    }\r\n\r\n    const handleResetGame = async () => {\r\n        try {\r\n            await axios.post('http://localhost:5000/api/games/reset', { gameId });\r\n            navigate('/');\r\n        } catch (err) {\r\n            console.error('Error resetting game:', err);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h2>Player 1 Game Page</h2>\r\n            <p>Your Secret Code: {gameData.secretCode1}</p>\r\n            <p><strong>Turn:</strong> {gameData.turn || 'Not set'}</p>\r\n            {!finished && <Timer initialTime={gameData.timeRemaining} onTimeUp={onTimeUp} resetTrigger={turnTrigger} />}\r\n            {finished && (\r\n                <div>\r\n                    <h3>Game Over</h3>\r\n                    <p>{outcomeMessage}</p>\r\n                    <button onClick={() => navigate('/')}>Go to Home Page</button>\r\n                    <button onClick={handleResetGame}>Restart Game</button>\r\n                </div>\r\n            )}\r\n            {!finished && (\r\n                <>\r\n                    <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n                        <div style={{ width: '48%' }}>\r\n                            <h3>Your Guess History</h3>\r\n                            {myGuesses.length === 0 ? (\r\n                                <p>No guesses yet.</p>\r\n                            ) : (\r\n                                <table border=\"1\">\r\n                                    <thead>\r\n                                        <tr>\r\n                                            <th>Guess</th>\r\n                                            <th>Numbers Correct</th>\r\n                                            <th>Positions Correct</th>\r\n                                        </tr>\r\n                                    </thead>\r\n                                    <tbody>\r\n                                        {myGuesses.map((g, index) => (\r\n                                            <tr key={index}>\r\n                                                <td>{g.guess}</td>\r\n                                                <td>{g.numbersCorrect}</td>\r\n                                                <td>{g.positionsCorrect}</td>\r\n                                            </tr>\r\n                                        ))}\r\n                                    </tbody>\r\n                                </table>\r\n                            )}\r\n                        </div>\r\n                        <div style={{ width: '48%' }}>\r\n                            <h3>Opponent's Guess History</h3>\r\n                            {oppGuesses.length === 0 ? (\r\n                                <p>No guesses yet.</p>\r\n                            ) : (\r\n                                <table border=\"1\">\r\n                                    <thead>\r\n                                        <tr>\r\n                                            <th>Guess</th>\r\n                                            <th>Numbers Correct</th>\r\n                                            <th>Positions Correct</th>\r\n                                        </tr>\r\n                                    </thead>\r\n                                    <tbody>\r\n                                        {oppGuesses.map((g, index) => (\r\n                                            <tr key={index}>\r\n                                                <td>{g.guess}</td>\r\n                                                <td>{g.numbersCorrect}</td>\r\n                                                <td>{g.positionsCorrect}</td>\r\n                                            </tr>\r\n                                        ))}\r\n                                    </tbody>\r\n                                </table>\r\n                            )}\r\n                        </div>\r\n                    </div>\r\n                    {myTurn ? (\r\n                        <form onSubmit={handleSubmitGuess}>\r\n                            <input\r\n                                type=\"text\"\r\n                                placeholder=\"Enter your guess\"\r\n                                value={guess}\r\n                                onChange={(e) => setGuess(e.target.value)}\r\n                            />\r\n                            <button type=\"submit\">Submit Guess</button>\r\n                        </form>\r\n                    ) : (\r\n                        <p>Waiting for your turn...</p>\r\n                    )}\r\n                    <NumberHelper />\r\n                    {guessMessage && <p>{guessMessage}</p>}\r\n                </>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default GamePageCreator;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}