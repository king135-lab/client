{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ademm\\\\Documents\\\\Projects\\\\number-position-game\\\\client\\\\src\\\\components\\\\NumberHelper.js\",\n  _s = $RefreshSig$();\n// src/components/NumberHelper.js\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NumberHelper = ({\n  guess,\n  setGuess\n}) => {\n  _s();\n  // Initialize selection based on the current guess string.\n  const initialState = {};\n  for (let i = 0; i < 10; i++) {\n    initialState[i] = guess.includes(i.toString());\n  }\n  const [selected, setSelected] = useState(initialState);\n  const toggleDigit = digit => {\n    const newSelected = {\n      ...selected,\n      [digit]: !selected[digit]\n    };\n    setSelected(newSelected);\n    // Build new guess string from all digits that are selected, in order 0-9.\n    let newGuess = '';\n    for (let i = 0; i < 10; i++) {\n      if (newSelected[i]) {\n        newGuess += i.toString();\n      }\n    }\n    setGuess(newGuess);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      marginTop: '10px'\n    },\n    children: Array.from({\n      length: 10\n    }, (_, i) => /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => toggleDigit(i),\n      style: {\n        margin: '2px',\n        padding: '5px',\n        backgroundColor: selected[i] ? '#ccc' : '#fff'\n      },\n      children: [i, selected[i] ? '/' : '']\n    }, i, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 17\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n};\n_s(NumberHelper, \"1bP9PQF5jQ9oJ7+OuCSm3dIRU0A=\");\n_c = NumberHelper;\nexport default NumberHelper;\nvar _c;\n$RefreshReg$(_c, \"NumberHelper\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","NumberHelper","guess","setGuess","_s","initialState","i","includes","toString","selected","setSelected","toggleDigit","digit","newSelected","newGuess","style","marginTop","children","Array","from","length","_","onClick","margin","padding","backgroundColor","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/ademm/Documents/Projects/number-position-game/client/src/components/NumberHelper.js"],"sourcesContent":["// src/components/NumberHelper.js\r\nimport React, { useState } from 'react';\r\n\r\nconst NumberHelper = ({ guess, setGuess }) => {\r\n    // Initialize selection based on the current guess string.\r\n    const initialState = {};\r\n    for (let i = 0; i < 10; i++) {\r\n        initialState[i] = guess.includes(i.toString());\r\n    }\r\n    const [selected, setSelected] = useState(initialState);\r\n\r\n    const toggleDigit = (digit) => {\r\n        const newSelected = { ...selected, [digit]: !selected[digit] };\r\n        setSelected(newSelected);\r\n        // Build new guess string from all digits that are selected, in order 0-9.\r\n        let newGuess = '';\r\n        for (let i = 0; i < 10; i++) {\r\n            if (newSelected[i]) {\r\n                newGuess += i.toString();\r\n            }\r\n        }\r\n        setGuess(newGuess);\r\n    };\r\n\r\n    return (\r\n        <div style={{ marginTop: '10px' }}>\r\n            {Array.from({ length: 10 }, (_, i) => (\r\n                <button\r\n                    key={i}\r\n                    onClick={() => toggleDigit(i)}\r\n                    style={{\r\n                        margin: '2px',\r\n                        padding: '5px',\r\n                        backgroundColor: selected[i] ? '#ccc' : '#fff'\r\n                    }}\r\n                >\r\n                    {i}{selected[i] ? '/' : ''}\r\n                </button>\r\n            ))}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default NumberHelper;\r\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,YAAY,GAAGA,CAAC;EAAEC,KAAK;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC1C;EACA,MAAMC,YAAY,GAAG,CAAC,CAAC;EACvB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,EAAE,EAAEA,CAAC,EAAE,EAAE;IACzBD,YAAY,CAACC,CAAC,CAAC,GAAGJ,KAAK,CAACK,QAAQ,CAACD,CAAC,CAACE,QAAQ,CAAC,CAAC,CAAC;EAClD;EACA,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGZ,QAAQ,CAACO,YAAY,CAAC;EAEtD,MAAMM,WAAW,GAAIC,KAAK,IAAK;IAC3B,MAAMC,WAAW,GAAG;MAAE,GAAGJ,QAAQ;MAAE,CAACG,KAAK,GAAG,CAACH,QAAQ,CAACG,KAAK;IAAE,CAAC;IAC9DF,WAAW,CAACG,WAAW,CAAC;IACxB;IACA,IAAIC,QAAQ,GAAG,EAAE;IACjB,KAAK,IAAIR,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,EAAE,EAAEA,CAAC,EAAE,EAAE;MACzB,IAAIO,WAAW,CAACP,CAAC,CAAC,EAAE;QAChBQ,QAAQ,IAAIR,CAAC,CAACE,QAAQ,CAAC,CAAC;MAC5B;IACJ;IACAL,QAAQ,CAACW,QAAQ,CAAC;EACtB,CAAC;EAED,oBACId,OAAA;IAAKe,KAAK,EAAE;MAAEC,SAAS,EAAE;IAAO,CAAE;IAAAC,QAAA,EAC7BC,KAAK,CAACC,IAAI,CAAC;MAAEC,MAAM,EAAE;IAAG,CAAC,EAAE,CAACC,CAAC,EAAEf,CAAC,kBAC7BN,OAAA;MAEIsB,OAAO,EAAEA,CAAA,KAAMX,WAAW,CAACL,CAAC,CAAE;MAC9BS,KAAK,EAAE;QACHQ,MAAM,EAAE,KAAK;QACbC,OAAO,EAAE,KAAK;QACdC,eAAe,EAAEhB,QAAQ,CAACH,CAAC,CAAC,GAAG,MAAM,GAAG;MAC5C,CAAE;MAAAW,QAAA,GAEDX,CAAC,EAAEG,QAAQ,CAACH,CAAC,CAAC,GAAG,GAAG,GAAG,EAAE;IAAA,GARrBA,CAAC;MAAAoB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OASF,CACX;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEd,CAAC;AAACzB,EAAA,CAtCIH,YAAY;AAAA6B,EAAA,GAAZ7B,YAAY;AAwClB,eAAeA,YAAY;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}