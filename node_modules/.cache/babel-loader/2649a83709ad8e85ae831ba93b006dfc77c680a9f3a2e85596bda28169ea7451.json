{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ademm\\\\Documents\\\\Projects\\\\number-position-game\\\\client\\\\src\\\\components\\\\GamePageCreator.js\",\n  _s = $RefreshSig$();\n// src/components/GamePageCreator.js\nimport React, { useState, useEffect } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport NumberHelper from './NumberHelper';\nimport Timer from './Timer';\nimport { ReactComponent as ConfettiIcon } from '../assets/confetti.svg';\nimport './GamePageCreator.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst GamePageCreator = () => {\n  _s();\n  var _gameData$guesses, _gameData$guesses2;\n  const {\n    gameId\n  } = useParams();\n  const navigate = useNavigate();\n  const [gameData, setGameData] = useState(null);\n  const [guess, setGuess] = useState('');\n  const [guessMessage, setGuessMessage] = useState('');\n  const [turnTrigger, setTurnTrigger] = useState(null);\n  const [gameEnded, setGameEnded] = useState(false);\n\n  // Poll game data every 3 seconds\n  useEffect(() => {\n    const interval = setInterval(async () => {\n      try {\n        const res = await axios.get(`http://localhost:5000/api/games/${gameId}`);\n        setGameData(res.data);\n        setTurnTrigger(res.data.turn); // update trigger when turn changes\n      } catch (err) {\n        console.error('Error fetching game data:', err);\n      }\n    }, 3000);\n    return () => clearInterval(interval);\n  }, [gameId]);\n\n  // Check for timeout based on gameData.timeRemaining, myTurn and finished status\n  useEffect(() => {\n    const checkTimeout = async () => {\n      if (gameData && gameData.timeRemaining <= 0 && myTurn && !finished) {\n        try {\n          await axios.post('/api/games/timeout', {\n            gameId\n          });\n          setGuessMessage('Time is up! Turn skipped.');\n        } catch (err) {\n          console.error('Error handling timeout:', err);\n        }\n      }\n    };\n    checkTimeout();\n  }, [gameData]); // (myTurn and finished are computed below)\n\n  if (!gameData) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading game data...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 27\n  }, this);\n\n  // For the creator, assume playerName is the first element.\n  const playerName = gameData.players[0];\n  const myGuesses = ((_gameData$guesses = gameData.guesses) !== null && _gameData$guesses !== void 0 ? _gameData$guesses : []).filter(g => g.player === playerName);\n  const oppGuesses = ((_gameData$guesses2 = gameData.guesses) !== null && _gameData$guesses2 !== void 0 ? _gameData$guesses2 : []).filter(g => g.player === gameData.players[1]);\n  const myTurn = gameData.turn === playerName;\n  const finished = gameData.status === 'finished';\n  const handleSubmitGuess = async e => {\n    e.preventDefault();\n    if (!guess) {\n      alert('Please enter a guess.');\n      return;\n    }\n    if (guess.length !== 4 || new Set(guess).size !== 4) {\n      setGuessMessage('Please enter exactly 4 unique digits.');\n      return;\n    }\n    try {\n      const res = await axios.post('http://localhost:5000/api/games/guess', {\n        gameId,\n        player: playerName,\n        guess\n      });\n      setGuessMessage(res.data.message);\n      setGuess('');\n    } catch (err) {\n      var _err$response, _err$response$data;\n      console.error('Error submitting guess:', err);\n      setGuessMessage(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.message) || 'Error submitting guess');\n    }\n  };\n\n  // When time runs out, auto-submit a missed turn and update the game status\n  const onTimeUp = async () => {\n    if (myTurn && gameData.status !== 'finished') {\n      try {\n        // Auto-submit an empty guess\n        await axios.post('http://localhost:5000/api/games/guess', {\n          gameId,\n          player: playerName,\n          guess: ''\n        });\n        setGuessMessage('Time is up! Turn skipped.');\n\n        // Record the missed turn with '-' values\n        await axios.post('http://localhost:5000/api/games/update', {\n          gameId,\n          player: playerName,\n          guess: '-',\n          numbersCorrect: '-',\n          positionsCorrect: '-'\n        });\n\n        // Transfer turn to the opponent\n        await axios.post('http://localhost:5000/api/games/nextTurn', {\n          gameId\n        });\n      } catch (err) {\n        console.error('Error auto-submitting guess or switching turn:', err);\n      }\n    }\n  };\n\n  // Quit Game: call the quitGame endpoint to end the game\n  const handleQuitGame = async () => {\n    const confirmation = window.confirm('Are you sure you want to end the game? You will be counted as the loser.');\n    if (confirmation) {\n      try {\n        await axios.post('http://localhost:5000/api/games/quitGame', {\n          gameId,\n          player: playerName\n        });\n        setGameEnded(true);\n      } catch (err) {\n        console.error('Error ending the game:', err);\n      }\n    }\n  };\n  let outcomeMessage = '';\n  if (finished) {\n    if (gameData.winner === \"draw\") {\n      outcomeMessage = \"It's a draw!\";\n    } else if (gameData.winner === playerName) {\n      outcomeMessage = \"Congratulations! You win! Confetti!!!\";\n    } else {\n      outcomeMessage = \"You lost! Better luck next time!\";\n    }\n  }\n  const handleResetGame = async () => {\n    try {\n      await axios.post('http://localhost:5000/api/games/reset', {\n        gameId\n      });\n      navigate('/');\n    } catch (err) {\n      console.error('Error resetting game:', err);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"game-container creator-view\",\n    children: [/*#__PURE__*/_jsxDEV(\"nav\", {\n      className: \"nav-bar\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"logo\",\n        children: [\"NUMBER\", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"logo-accent\",\n          children: \"POSITION\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 27\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 17\n      }, this), !finished && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleQuitGame,\n        className: \"btn quit-game-btn\",\n        children: \"Quit Game\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"game-main\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"game-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"game-title\",\n          children: [\"Game Room: \", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"code\",\n            children: gameId\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 36\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"status-badge\",\n          children: finished ? 'Game Over' : myTurn ? 'Your Turn' : \"Opponent's Turn\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"secret-code-display\",\n        children: [\"Your Secret Code: \", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"code\",\n          children: gameData.secretCode1\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 39\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 17\n      }, this), !finished && myTurn && /*#__PURE__*/_jsxDEV(Timer, {\n        initialTime: gameData.timeRemaining,\n        onTimeUp: onTimeUp,\n        resetTrigger: turnTrigger\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 21\n      }, this), finished && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"outcome-banner\",\n        children: [gameData.winner === \"draw\" ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"\\uD83E\\uDD1D\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 31\n          }, this), \" \", outcomeMessage]\n        }, void 0, true) : gameData.winner === playerName ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(ConfettiIcon, {\n            className: \"confetti\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 31\n          }, this), \" \", outcomeMessage]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"\\uD83D\\uDC94\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 31\n          }, this), \" \", outcomeMessage]\n        }, void 0, true), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn home-btn\",\n          onClick: () => navigate('/'),\n          children: \"Return to Home\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn reset-btn\",\n          onClick: handleResetGame,\n          children: \"Restart Game\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 21\n      }, this), !finished && !gameEnded && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"guess-history-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"guess-column\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"column-title\",\n              children: \"Your Guesses\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 189,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"guess-table\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"table-header\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  children: \"Guess\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 192,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: \"Numbers Correct\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 193,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: \"Positions Correct\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 194,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 191,\n                columnNumber: 37\n              }, this), myGuesses.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"empty-state\",\n                children: \"No guesses yet\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 197,\n                columnNumber: 41\n              }, this) : myGuesses.map((g, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"table-row\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  children: g.guess\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 201,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"correct-count\",\n                  children: g.numbersCorrect\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 202,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"correct-count\",\n                  children: g.positionsCorrect\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 203,\n                  columnNumber: 49\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 200,\n                columnNumber: 45\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 190,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"guess-column\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"column-title\",\n              children: \"Opponent's Guesses\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 211,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"guess-table\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"table-header\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  children: \"Guess\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 214,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: \"Numbers Correct\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 215,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: \"Positions Correct\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 216,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 213,\n                columnNumber: 37\n              }, this), oppGuesses.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"empty-state\",\n                children: \"No guesses yet\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 219,\n                columnNumber: 41\n              }, this) : oppGuesses.map((g, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"table-row\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  children: g.guess\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 223,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"correct-count\",\n                  children: g.numbersCorrect\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 224,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"correct-count\",\n                  children: g.positionsCorrect\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 225,\n                  columnNumber: 49\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 222,\n                columnNumber: 45\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 212,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"guess-input-section\",\n          children: [myTurn ? /*#__PURE__*/_jsxDEV(\"form\", {\n            className: \"guess-form\",\n            onSubmit: handleSubmitGuess,\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              className: \"guess-input\",\n              placeholder: \"Enter your guess\",\n              value: guess,\n              onChange: e => setGuess(e.target.value),\n              maxLength: \"4\",\n              pattern: \"\\\\d{4}\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 236,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              className: \"btn submit-guess-btn\",\n              disabled: !guess || guess.length !== 4 || new Set(guess).size !== 4,\n              children: \"Submit Guess\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 245,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 235,\n            columnNumber: 33\n          }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"waiting-turn\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"pulse-dot\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 255,\n              columnNumber: 37\n            }, this), \"Waiting for your turn...\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 254,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(NumberHelper, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 259,\n            columnNumber: 29\n          }, this), guessMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"guess-feedback\",\n            children: guessMessage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 260,\n            columnNumber: 46\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 136,\n    columnNumber: 9\n  }, this);\n};\n_s(GamePageCreator, \"Wqmtq1MLOh63larouk17SK+VQQM=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = GamePageCreator;\nexport default GamePageCreator;\nvar _c;\n$RefreshReg$(_c, \"GamePageCreator\");","map":{"version":3,"names":["React","useState","useEffect","useParams","useNavigate","axios","NumberHelper","Timer","ReactComponent","ConfettiIcon","jsxDEV","_jsxDEV","Fragment","_Fragment","GamePageCreator","_s","_gameData$guesses","_gameData$guesses2","gameId","navigate","gameData","setGameData","guess","setGuess","guessMessage","setGuessMessage","turnTrigger","setTurnTrigger","gameEnded","setGameEnded","interval","setInterval","res","get","data","turn","err","console","error","clearInterval","checkTimeout","timeRemaining","myTurn","finished","post","children","fileName","_jsxFileName","lineNumber","columnNumber","playerName","players","myGuesses","guesses","filter","g","player","oppGuesses","status","handleSubmitGuess","e","preventDefault","alert","length","Set","size","message","_err$response","_err$response$data","response","onTimeUp","numbersCorrect","positionsCorrect","handleQuitGame","confirmation","window","confirm","outcomeMessage","winner","handleResetGame","className","onClick","secretCode1","initialTime","resetTrigger","map","index","onSubmit","type","placeholder","value","onChange","target","maxLength","pattern","disabled","_c","$RefreshReg$"],"sources":["C:/Users/ademm/Documents/Projects/number-position-game/client/src/components/GamePageCreator.js"],"sourcesContent":["// src/components/GamePageCreator.js\r\nimport React, { useState, useEffect } from 'react';\r\nimport { useParams, useNavigate } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport NumberHelper from './NumberHelper';\r\nimport Timer from './Timer';\r\nimport { ReactComponent as ConfettiIcon } from '../assets/confetti.svg';\r\nimport './GamePageCreator.css';\r\n\r\nconst GamePageCreator = () => {\r\n    const { gameId } = useParams();\r\n    const navigate = useNavigate();\r\n    const [gameData, setGameData] = useState(null);\r\n    const [guess, setGuess] = useState('');\r\n    const [guessMessage, setGuessMessage] = useState('');\r\n    const [turnTrigger, setTurnTrigger] = useState(null);\r\n    const [gameEnded, setGameEnded] = useState(false);\r\n\r\n    // Poll game data every 3 seconds\r\n    useEffect(() => {\r\n        const interval = setInterval(async () => {\r\n            try {\r\n                const res = await axios.get(`http://localhost:5000/api/games/${gameId}`);\r\n                setGameData(res.data);\r\n                setTurnTrigger(res.data.turn); // update trigger when turn changes\r\n            } catch (err) {\r\n                console.error('Error fetching game data:', err);\r\n            }\r\n        }, 3000);\r\n        return () => clearInterval(interval);\r\n    }, [gameId]);\r\n\r\n    // Check for timeout based on gameData.timeRemaining, myTurn and finished status\r\n    useEffect(() => {\r\n        const checkTimeout = async () => {\r\n            if (gameData && gameData.timeRemaining <= 0 && myTurn && !finished) {\r\n                try {\r\n                    await axios.post('/api/games/timeout', { gameId });\r\n                    setGuessMessage('Time is up! Turn skipped.');\r\n                } catch (err) {\r\n                    console.error('Error handling timeout:', err);\r\n                }\r\n            }\r\n        };\r\n        checkTimeout();\r\n    }, [gameData]); // (myTurn and finished are computed below)\r\n\r\n    if (!gameData) return <p>Loading game data...</p>;\r\n\r\n    // For the creator, assume playerName is the first element.\r\n    const playerName = gameData.players[0];\r\n    const myGuesses = (gameData.guesses ?? []).filter(g => g.player === playerName);\r\n    const oppGuesses = (gameData.guesses ?? []).filter(g => g.player === gameData.players[1]);\r\n    const myTurn = gameData.turn === playerName;\r\n    const finished = gameData.status === 'finished';\r\n\r\n    const handleSubmitGuess = async (e) => {\r\n        e.preventDefault();\r\n        if (!guess) {\r\n            alert('Please enter a guess.');\r\n            return;\r\n        }\r\n        if (guess.length !== 4 || new Set(guess).size !== 4) {\r\n            setGuessMessage('Please enter exactly 4 unique digits.');\r\n            return;\r\n        }\r\n        try {\r\n            const res = await axios.post('http://localhost:5000/api/games/guess', { gameId, player: playerName, guess });\r\n            setGuessMessage(res.data.message);\r\n            setGuess('');\r\n        } catch (err) {\r\n            console.error('Error submitting guess:', err);\r\n            setGuessMessage(err.response?.data?.message || 'Error submitting guess');\r\n        }\r\n    };\r\n\r\n    // When time runs out, auto-submit a missed turn and update the game status\r\n    const onTimeUp = async () => {\r\n        if (myTurn && gameData.status !== 'finished') {\r\n            try {\r\n                // Auto-submit an empty guess\r\n                await axios.post('http://localhost:5000/api/games/guess', { gameId, player: playerName, guess: '' });\r\n                setGuessMessage('Time is up! Turn skipped.');\r\n\r\n                // Record the missed turn with '-' values\r\n                await axios.post('http://localhost:5000/api/games/update', {\r\n                    gameId,\r\n                    player: playerName,\r\n                    guess: '-',\r\n                    numbersCorrect: '-',\r\n                    positionsCorrect: '-'\r\n                });\r\n\r\n                // Transfer turn to the opponent\r\n                await axios.post('http://localhost:5000/api/games/nextTurn', { gameId });\r\n            } catch (err) {\r\n                console.error('Error auto-submitting guess or switching turn:', err);\r\n            }\r\n        }\r\n    };\r\n\r\n    // Quit Game: call the quitGame endpoint to end the game\r\n    const handleQuitGame = async () => {\r\n        const confirmation = window.confirm('Are you sure you want to end the game? You will be counted as the loser.');\r\n        if (confirmation) {\r\n            try {\r\n                await axios.post('http://localhost:5000/api/games/quitGame', { gameId, player: playerName });\r\n                setGameEnded(true);\r\n            } catch (err) {\r\n                console.error('Error ending the game:', err);\r\n            }\r\n        }\r\n    };\r\n\r\n    let outcomeMessage = '';\r\n    if (finished) {\r\n        if (gameData.winner === \"draw\") {\r\n            outcomeMessage = \"It's a draw!\";\r\n        } else if (gameData.winner === playerName) {\r\n            outcomeMessage = \"Congratulations! You win! Confetti!!!\";\r\n        } else {\r\n            outcomeMessage = \"You lost! Better luck next time!\";\r\n        }\r\n    }\r\n\r\n    const handleResetGame = async () => {\r\n        try {\r\n            await axios.post('http://localhost:5000/api/games/reset', { gameId });\r\n            navigate('/');\r\n        } catch (err) {\r\n            console.error('Error resetting game:', err);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"game-container creator-view\">\r\n            <nav className=\"nav-bar\">\r\n                <h1 className=\"logo\">\r\n                    NUMBER<span className=\"logo-accent\">POSITION</span>\r\n                </h1>\r\n                {!finished && (\r\n                    <button onClick={handleQuitGame} className=\"btn quit-game-btn\">\r\n                        Quit Game\r\n                    </button>\r\n                )}\r\n            </nav>\r\n\r\n            <main className=\"game-main\">\r\n                <div className=\"game-header\">\r\n                    <h2 className=\"game-title\">\r\n                        Game Room: <span className=\"code\">{gameId}</span>\r\n                    </h2>\r\n                    <div className=\"status-badge\">\r\n                        {finished ? 'Game Over' : myTurn ? 'Your Turn' : \"Opponent's Turn\"}\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"secret-code-display\">\r\n                    Your Secret Code: <span className=\"code\">{gameData.secretCode1}</span>\r\n                </div>\r\n\r\n                {/* Render timer only if it's your turn */}\r\n                {!finished && myTurn && (\r\n                    <Timer initialTime={gameData.timeRemaining} onTimeUp={onTimeUp} resetTrigger={turnTrigger} />\r\n                )}\r\n\r\n                {finished && (\r\n                    <div className=\"outcome-banner\">\r\n                        {gameData.winner === \"draw\" ? (\r\n                            <><span>🤝</span> {outcomeMessage}</>\r\n                        ) : gameData.winner === playerName ? (\r\n                            <><ConfettiIcon className=\"confetti\" /> {outcomeMessage}</>\r\n                        ) : (\r\n                            <><span>💔</span> {outcomeMessage}</>\r\n                        )}\r\n                        <button className=\"btn home-btn\" onClick={() => navigate('/')}>\r\n                            Return to Home\r\n                        </button>\r\n                        <button className=\"btn reset-btn\" onClick={handleResetGame}>\r\n                            Restart Game\r\n                        </button>\r\n                    </div>\r\n                )}\r\n\r\n                {!finished && !gameEnded && (\r\n                    <>\r\n                        <div className=\"guess-history-container\">\r\n                            <div className=\"guess-column\">\r\n                                <h3 className=\"column-title\">Your Guesses</h3>\r\n                                <div className=\"guess-table\">\r\n                                    <div className=\"table-header\">\r\n                                        <div>Guess</div>\r\n                                        <div>Numbers Correct</div>\r\n                                        <div>Positions Correct</div>\r\n                                    </div>\r\n                                    {myGuesses.length === 0 ? (\r\n                                        <div className=\"empty-state\">No guesses yet</div>\r\n                                    ) : (\r\n                                        myGuesses.map((g, index) => (\r\n                                            <div className=\"table-row\" key={index}>\r\n                                                <div>{g.guess}</div>\r\n                                                <div className=\"correct-count\">{g.numbersCorrect}</div>\r\n                                                <div className=\"correct-count\">{g.positionsCorrect}</div>\r\n                                            </div>\r\n                                        ))\r\n                                    )}\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"guess-column\">\r\n                                <h3 className=\"column-title\">Opponent's Guesses</h3>\r\n                                <div className=\"guess-table\">\r\n                                    <div className=\"table-header\">\r\n                                        <div>Guess</div>\r\n                                        <div>Numbers Correct</div>\r\n                                        <div>Positions Correct</div>\r\n                                    </div>\r\n                                    {oppGuesses.length === 0 ? (\r\n                                        <div className=\"empty-state\">No guesses yet</div>\r\n                                    ) : (\r\n                                        oppGuesses.map((g, index) => (\r\n                                            <div className=\"table-row\" key={index}>\r\n                                                <div>{g.guess}</div>\r\n                                                <div className=\"correct-count\">{g.numbersCorrect}</div>\r\n                                                <div className=\"correct-count\">{g.positionsCorrect}</div>\r\n                                            </div>\r\n                                        ))\r\n                                    )}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"guess-input-section\">\r\n                            {myTurn ? (\r\n                                <form className=\"guess-form\" onSubmit={handleSubmitGuess}>\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        className=\"guess-input\"\r\n                                        placeholder=\"Enter your guess\"\r\n                                        value={guess}\r\n                                        onChange={(e) => setGuess(e.target.value)}\r\n                                        maxLength=\"4\"\r\n                                        pattern=\"\\d{4}\"\r\n                                    />\r\n                                    <button\r\n                                        type=\"submit\"\r\n                                        className=\"btn submit-guess-btn\"\r\n                                        disabled={!guess || guess.length !== 4 || new Set(guess).size !== 4}\r\n                                    >\r\n                                        Submit Guess\r\n                                    </button>\r\n                                </form>\r\n                            ) : (\r\n                                <p className=\"waiting-turn\">\r\n                                    <span className=\"pulse-dot\"></span>\r\n                                    Waiting for your turn...\r\n                                </p>\r\n                            )}\r\n                            <NumberHelper />\r\n                            {guessMessage && <div className=\"guess-feedback\">{guessMessage}</div>}\r\n                        </div>\r\n                    </>\r\n                )}\r\n            </main>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default GamePageCreator;\r\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,SAAS,EAAEC,WAAW,QAAQ,kBAAkB;AACzD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,YAAY,MAAM,gBAAgB;AACzC,OAAOC,KAAK,MAAM,SAAS;AAC3B,SAASC,cAAc,IAAIC,YAAY,QAAQ,wBAAwB;AACvE,OAAO,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAE/B,MAAMC,eAAe,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAAA,IAAAC,iBAAA,EAAAC,kBAAA;EAC1B,MAAM;IAAEC;EAAO,CAAC,GAAGf,SAAS,CAAC,CAAC;EAC9B,MAAMgB,QAAQ,GAAGf,WAAW,CAAC,CAAC;EAC9B,MAAM,CAACgB,QAAQ,EAAEC,WAAW,CAAC,GAAGpB,QAAQ,CAAC,IAAI,CAAC;EAC9C,MAAM,CAACqB,KAAK,EAAEC,QAAQ,CAAC,GAAGtB,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACuB,YAAY,EAAEC,eAAe,CAAC,GAAGxB,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACyB,WAAW,EAAEC,cAAc,CAAC,GAAG1B,QAAQ,CAAC,IAAI,CAAC;EACpD,MAAM,CAAC2B,SAAS,EAAEC,YAAY,CAAC,GAAG5B,QAAQ,CAAC,KAAK,CAAC;;EAEjD;EACAC,SAAS,CAAC,MAAM;IACZ,MAAM4B,QAAQ,GAAGC,WAAW,CAAC,YAAY;MACrC,IAAI;QACA,MAAMC,GAAG,GAAG,MAAM3B,KAAK,CAAC4B,GAAG,CAAC,mCAAmCf,MAAM,EAAE,CAAC;QACxEG,WAAW,CAACW,GAAG,CAACE,IAAI,CAAC;QACrBP,cAAc,CAACK,GAAG,CAACE,IAAI,CAACC,IAAI,CAAC,CAAC,CAAC;MACnC,CAAC,CAAC,OAAOC,GAAG,EAAE;QACVC,OAAO,CAACC,KAAK,CAAC,2BAA2B,EAAEF,GAAG,CAAC;MACnD;IACJ,CAAC,EAAE,IAAI,CAAC;IACR,OAAO,MAAMG,aAAa,CAACT,QAAQ,CAAC;EACxC,CAAC,EAAE,CAACZ,MAAM,CAAC,CAAC;;EAEZ;EACAhB,SAAS,CAAC,MAAM;IACZ,MAAMsC,YAAY,GAAG,MAAAA,CAAA,KAAY;MAC7B,IAAIpB,QAAQ,IAAIA,QAAQ,CAACqB,aAAa,IAAI,CAAC,IAAIC,MAAM,IAAI,CAACC,QAAQ,EAAE;QAChE,IAAI;UACA,MAAMtC,KAAK,CAACuC,IAAI,CAAC,oBAAoB,EAAE;YAAE1B;UAAO,CAAC,CAAC;UAClDO,eAAe,CAAC,2BAA2B,CAAC;QAChD,CAAC,CAAC,OAAOW,GAAG,EAAE;UACVC,OAAO,CAACC,KAAK,CAAC,yBAAyB,EAAEF,GAAG,CAAC;QACjD;MACJ;IACJ,CAAC;IACDI,YAAY,CAAC,CAAC;EAClB,CAAC,EAAE,CAACpB,QAAQ,CAAC,CAAC,CAAC,CAAC;;EAEhB,IAAI,CAACA,QAAQ,EAAE,oBAAOT,OAAA;IAAAkC,QAAA,EAAG;EAAoB;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAG,CAAC;;EAEjD;EACA,MAAMC,UAAU,GAAG9B,QAAQ,CAAC+B,OAAO,CAAC,CAAC,CAAC;EACtC,MAAMC,SAAS,GAAG,EAAApC,iBAAA,GAACI,QAAQ,CAACiC,OAAO,cAAArC,iBAAA,cAAAA,iBAAA,GAAI,EAAE,EAAEsC,MAAM,CAACC,CAAC,IAAIA,CAAC,CAACC,MAAM,KAAKN,UAAU,CAAC;EAC/E,MAAMO,UAAU,GAAG,EAAAxC,kBAAA,GAACG,QAAQ,CAACiC,OAAO,cAAApC,kBAAA,cAAAA,kBAAA,GAAI,EAAE,EAAEqC,MAAM,CAACC,CAAC,IAAIA,CAAC,CAACC,MAAM,KAAKpC,QAAQ,CAAC+B,OAAO,CAAC,CAAC,CAAC,CAAC;EACzF,MAAMT,MAAM,GAAGtB,QAAQ,CAACe,IAAI,KAAKe,UAAU;EAC3C,MAAMP,QAAQ,GAAGvB,QAAQ,CAACsC,MAAM,KAAK,UAAU;EAE/C,MAAMC,iBAAiB,GAAG,MAAOC,CAAC,IAAK;IACnCA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,IAAI,CAACvC,KAAK,EAAE;MACRwC,KAAK,CAAC,uBAAuB,CAAC;MAC9B;IACJ;IACA,IAAIxC,KAAK,CAACyC,MAAM,KAAK,CAAC,IAAI,IAAIC,GAAG,CAAC1C,KAAK,CAAC,CAAC2C,IAAI,KAAK,CAAC,EAAE;MACjDxC,eAAe,CAAC,uCAAuC,CAAC;MACxD;IACJ;IACA,IAAI;MACA,MAAMO,GAAG,GAAG,MAAM3B,KAAK,CAACuC,IAAI,CAAC,uCAAuC,EAAE;QAAE1B,MAAM;QAAEsC,MAAM,EAAEN,UAAU;QAAE5B;MAAM,CAAC,CAAC;MAC5GG,eAAe,CAACO,GAAG,CAACE,IAAI,CAACgC,OAAO,CAAC;MACjC3C,QAAQ,CAAC,EAAE,CAAC;IAChB,CAAC,CAAC,OAAOa,GAAG,EAAE;MAAA,IAAA+B,aAAA,EAAAC,kBAAA;MACV/B,OAAO,CAACC,KAAK,CAAC,yBAAyB,EAAEF,GAAG,CAAC;MAC7CX,eAAe,CAAC,EAAA0C,aAAA,GAAA/B,GAAG,CAACiC,QAAQ,cAAAF,aAAA,wBAAAC,kBAAA,GAAZD,aAAA,CAAcjC,IAAI,cAAAkC,kBAAA,uBAAlBA,kBAAA,CAAoBF,OAAO,KAAI,wBAAwB,CAAC;IAC5E;EACJ,CAAC;;EAED;EACA,MAAMI,QAAQ,GAAG,MAAAA,CAAA,KAAY;IACzB,IAAI5B,MAAM,IAAItB,QAAQ,CAACsC,MAAM,KAAK,UAAU,EAAE;MAC1C,IAAI;QACA;QACA,MAAMrD,KAAK,CAACuC,IAAI,CAAC,uCAAuC,EAAE;UAAE1B,MAAM;UAAEsC,MAAM,EAAEN,UAAU;UAAE5B,KAAK,EAAE;QAAG,CAAC,CAAC;QACpGG,eAAe,CAAC,2BAA2B,CAAC;;QAE5C;QACA,MAAMpB,KAAK,CAACuC,IAAI,CAAC,wCAAwC,EAAE;UACvD1B,MAAM;UACNsC,MAAM,EAAEN,UAAU;UAClB5B,KAAK,EAAE,GAAG;UACViD,cAAc,EAAE,GAAG;UACnBC,gBAAgB,EAAE;QACtB,CAAC,CAAC;;QAEF;QACA,MAAMnE,KAAK,CAACuC,IAAI,CAAC,0CAA0C,EAAE;UAAE1B;QAAO,CAAC,CAAC;MAC5E,CAAC,CAAC,OAAOkB,GAAG,EAAE;QACVC,OAAO,CAACC,KAAK,CAAC,gDAAgD,EAAEF,GAAG,CAAC;MACxE;IACJ;EACJ,CAAC;;EAED;EACA,MAAMqC,cAAc,GAAG,MAAAA,CAAA,KAAY;IAC/B,MAAMC,YAAY,GAAGC,MAAM,CAACC,OAAO,CAAC,0EAA0E,CAAC;IAC/G,IAAIF,YAAY,EAAE;MACd,IAAI;QACA,MAAMrE,KAAK,CAACuC,IAAI,CAAC,0CAA0C,EAAE;UAAE1B,MAAM;UAAEsC,MAAM,EAAEN;QAAW,CAAC,CAAC;QAC5FrB,YAAY,CAAC,IAAI,CAAC;MACtB,CAAC,CAAC,OAAOO,GAAG,EAAE;QACVC,OAAO,CAACC,KAAK,CAAC,wBAAwB,EAAEF,GAAG,CAAC;MAChD;IACJ;EACJ,CAAC;EAED,IAAIyC,cAAc,GAAG,EAAE;EACvB,IAAIlC,QAAQ,EAAE;IACV,IAAIvB,QAAQ,CAAC0D,MAAM,KAAK,MAAM,EAAE;MAC5BD,cAAc,GAAG,cAAc;IACnC,CAAC,MAAM,IAAIzD,QAAQ,CAAC0D,MAAM,KAAK5B,UAAU,EAAE;MACvC2B,cAAc,GAAG,uCAAuC;IAC5D,CAAC,MAAM;MACHA,cAAc,GAAG,kCAAkC;IACvD;EACJ;EAEA,MAAME,eAAe,GAAG,MAAAA,CAAA,KAAY;IAChC,IAAI;MACA,MAAM1E,KAAK,CAACuC,IAAI,CAAC,uCAAuC,EAAE;QAAE1B;MAAO,CAAC,CAAC;MACrEC,QAAQ,CAAC,GAAG,CAAC;IACjB,CAAC,CAAC,OAAOiB,GAAG,EAAE;MACVC,OAAO,CAACC,KAAK,CAAC,uBAAuB,EAAEF,GAAG,CAAC;IAC/C;EACJ,CAAC;EAED,oBACIzB,OAAA;IAAKqE,SAAS,EAAC,6BAA6B;IAAAnC,QAAA,gBACxClC,OAAA;MAAKqE,SAAS,EAAC,SAAS;MAAAnC,QAAA,gBACpBlC,OAAA;QAAIqE,SAAS,EAAC,MAAM;QAAAnC,QAAA,GAAC,QACX,eAAAlC,OAAA;UAAMqE,SAAS,EAAC,aAAa;UAAAnC,QAAA,EAAC;QAAQ;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACnD,CAAC,EACJ,CAACN,QAAQ,iBACNhC,OAAA;QAAQsE,OAAO,EAAER,cAAe;QAACO,SAAS,EAAC,mBAAmB;QAAAnC,QAAA,EAAC;MAE/D;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CACX;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC,eAENtC,OAAA;MAAMqE,SAAS,EAAC,WAAW;MAAAnC,QAAA,gBACvBlC,OAAA;QAAKqE,SAAS,EAAC,aAAa;QAAAnC,QAAA,gBACxBlC,OAAA;UAAIqE,SAAS,EAAC,YAAY;UAAAnC,QAAA,GAAC,aACZ,eAAAlC,OAAA;YAAMqE,SAAS,EAAC,MAAM;YAAAnC,QAAA,EAAE3B;UAAM;YAAA4B,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACjD,CAAC,eACLtC,OAAA;UAAKqE,SAAS,EAAC,cAAc;UAAAnC,QAAA,EACxBF,QAAQ,GAAG,WAAW,GAAGD,MAAM,GAAG,WAAW,GAAG;QAAiB;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACjE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL,CAAC,eAENtC,OAAA;QAAKqE,SAAS,EAAC,qBAAqB;QAAAnC,QAAA,GAAC,oBACf,eAAAlC,OAAA;UAAMqE,SAAS,EAAC,MAAM;UAAAnC,QAAA,EAAEzB,QAAQ,CAAC8D;QAAW;UAAApC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACrE,CAAC,EAGL,CAACN,QAAQ,IAAID,MAAM,iBAChB/B,OAAA,CAACJ,KAAK;QAAC4E,WAAW,EAAE/D,QAAQ,CAACqB,aAAc;QAAC6B,QAAQ,EAAEA,QAAS;QAACc,YAAY,EAAE1D;MAAY;QAAAoB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAC/F,EAEAN,QAAQ,iBACLhC,OAAA;QAAKqE,SAAS,EAAC,gBAAgB;QAAAnC,QAAA,GAC1BzB,QAAQ,CAAC0D,MAAM,KAAK,MAAM,gBACvBnE,OAAA,CAAAE,SAAA;UAAAgC,QAAA,gBAAElC,OAAA;YAAAkC,QAAA,EAAM;UAAE;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC,KAAC,EAAC4B,cAAc;QAAA,eAAG,CAAC,GACrCzD,QAAQ,CAAC0D,MAAM,KAAK5B,UAAU,gBAC9BvC,OAAA,CAAAE,SAAA;UAAAgC,QAAA,gBAAElC,OAAA,CAACF,YAAY;YAACuE,SAAS,EAAC;UAAU;YAAAlC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,KAAC,EAAC4B,cAAc;QAAA,eAAG,CAAC,gBAE3DlE,OAAA,CAAAE,SAAA;UAAAgC,QAAA,gBAAElC,OAAA;YAAAkC,QAAA,EAAM;UAAE;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC,KAAC,EAAC4B,cAAc;QAAA,eAAG,CACvC,eACDlE,OAAA;UAAQqE,SAAS,EAAC,cAAc;UAACC,OAAO,EAAEA,CAAA,KAAM9D,QAAQ,CAAC,GAAG,CAAE;UAAA0B,QAAA,EAAC;QAE/D;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACTtC,OAAA;UAAQqE,SAAS,EAAC,eAAe;UAACC,OAAO,EAAEF,eAAgB;UAAAlC,QAAA,EAAC;QAE5D;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACR,CACR,EAEA,CAACN,QAAQ,IAAI,CAACf,SAAS,iBACpBjB,OAAA,CAAAE,SAAA;QAAAgC,QAAA,gBACIlC,OAAA;UAAKqE,SAAS,EAAC,yBAAyB;UAAAnC,QAAA,gBACpClC,OAAA;YAAKqE,SAAS,EAAC,cAAc;YAAAnC,QAAA,gBACzBlC,OAAA;cAAIqE,SAAS,EAAC,cAAc;cAAAnC,QAAA,EAAC;YAAY;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eAC9CtC,OAAA;cAAKqE,SAAS,EAAC,aAAa;cAAAnC,QAAA,gBACxBlC,OAAA;gBAAKqE,SAAS,EAAC,cAAc;gBAAAnC,QAAA,gBACzBlC,OAAA;kBAAAkC,QAAA,EAAK;gBAAK;kBAAAC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAK,CAAC,eAChBtC,OAAA;kBAAAkC,QAAA,EAAK;gBAAe;kBAAAC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAK,CAAC,eAC1BtC,OAAA;kBAAAkC,QAAA,EAAK;gBAAiB;kBAAAC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAK,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAC3B,CAAC,EACLG,SAAS,CAACW,MAAM,KAAK,CAAC,gBACnBpD,OAAA;gBAAKqE,SAAS,EAAC,aAAa;gBAAAnC,QAAA,EAAC;cAAc;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAK,CAAC,GAEjDG,SAAS,CAACiC,GAAG,CAAC,CAAC9B,CAAC,EAAE+B,KAAK,kBACnB3E,OAAA;gBAAKqE,SAAS,EAAC,WAAW;gBAAAnC,QAAA,gBACtBlC,OAAA;kBAAAkC,QAAA,EAAMU,CAAC,CAACjC;gBAAK;kBAAAwB,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAM,CAAC,eACpBtC,OAAA;kBAAKqE,SAAS,EAAC,eAAe;kBAAAnC,QAAA,EAAEU,CAAC,CAACgB;gBAAc;kBAAAzB,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAM,CAAC,eACvDtC,OAAA;kBAAKqE,SAAS,EAAC,eAAe;kBAAAnC,QAAA,EAAEU,CAAC,CAACiB;gBAAgB;kBAAA1B,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAM,CAAC;cAAA,GAH7BqC,KAAK;gBAAAxC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAIhC,CACR,CACJ;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACA,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACL,CAAC,eAENtC,OAAA;YAAKqE,SAAS,EAAC,cAAc;YAAAnC,QAAA,gBACzBlC,OAAA;cAAIqE,SAAS,EAAC,cAAc;cAAAnC,QAAA,EAAC;YAAkB;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eACpDtC,OAAA;cAAKqE,SAAS,EAAC,aAAa;cAAAnC,QAAA,gBACxBlC,OAAA;gBAAKqE,SAAS,EAAC,cAAc;gBAAAnC,QAAA,gBACzBlC,OAAA;kBAAAkC,QAAA,EAAK;gBAAK;kBAAAC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAK,CAAC,eAChBtC,OAAA;kBAAAkC,QAAA,EAAK;gBAAe;kBAAAC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAK,CAAC,eAC1BtC,OAAA;kBAAAkC,QAAA,EAAK;gBAAiB;kBAAAC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAK,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAC3B,CAAC,EACLQ,UAAU,CAACM,MAAM,KAAK,CAAC,gBACpBpD,OAAA;gBAAKqE,SAAS,EAAC,aAAa;gBAAAnC,QAAA,EAAC;cAAc;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAK,CAAC,GAEjDQ,UAAU,CAAC4B,GAAG,CAAC,CAAC9B,CAAC,EAAE+B,KAAK,kBACpB3E,OAAA;gBAAKqE,SAAS,EAAC,WAAW;gBAAAnC,QAAA,gBACtBlC,OAAA;kBAAAkC,QAAA,EAAMU,CAAC,CAACjC;gBAAK;kBAAAwB,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAM,CAAC,eACpBtC,OAAA;kBAAKqE,SAAS,EAAC,eAAe;kBAAAnC,QAAA,EAAEU,CAAC,CAACgB;gBAAc;kBAAAzB,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAM,CAAC,eACvDtC,OAAA;kBAAKqE,SAAS,EAAC,eAAe;kBAAAnC,QAAA,EAAEU,CAAC,CAACiB;gBAAgB;kBAAA1B,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAM,CAAC;cAAA,GAH7BqC,KAAK;gBAAAxC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAIhC,CACR,CACJ;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACA,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACL,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACL,CAAC,eAENtC,OAAA;UAAKqE,SAAS,EAAC,qBAAqB;UAAAnC,QAAA,GAC/BH,MAAM,gBACH/B,OAAA;YAAMqE,SAAS,EAAC,YAAY;YAACO,QAAQ,EAAE5B,iBAAkB;YAAAd,QAAA,gBACrDlC,OAAA;cACI6E,IAAI,EAAC,MAAM;cACXR,SAAS,EAAC,aAAa;cACvBS,WAAW,EAAC,kBAAkB;cAC9BC,KAAK,EAAEpE,KAAM;cACbqE,QAAQ,EAAG/B,CAAC,IAAKrC,QAAQ,CAACqC,CAAC,CAACgC,MAAM,CAACF,KAAK,CAAE;cAC1CG,SAAS,EAAC,GAAG;cACbC,OAAO,EAAC;YAAO;cAAAhD,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAClB,CAAC,eACFtC,OAAA;cACI6E,IAAI,EAAC,QAAQ;cACbR,SAAS,EAAC,sBAAsB;cAChCe,QAAQ,EAAE,CAACzE,KAAK,IAAIA,KAAK,CAACyC,MAAM,KAAK,CAAC,IAAI,IAAIC,GAAG,CAAC1C,KAAK,CAAC,CAAC2C,IAAI,KAAK,CAAE;cAAApB,QAAA,EACvE;YAED;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACP,CAAC,gBAEPtC,OAAA;YAAGqE,SAAS,EAAC,cAAc;YAAAnC,QAAA,gBACvBlC,OAAA;cAAMqE,SAAS,EAAC;YAAW;cAAAlC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC,4BAEvC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAG,CACN,eACDtC,OAAA,CAACL,YAAY;YAAAwC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,EACfzB,YAAY,iBAAIb,OAAA;YAAKqE,SAAS,EAAC,gBAAgB;YAAAnC,QAAA,EAAErB;UAAY;YAAAsB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACpE,CAAC;MAAA,eACR,CACL;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEd,CAAC;AAAClC,EAAA,CAjQID,eAAe;EAAA,QACEX,SAAS,EACXC,WAAW;AAAA;AAAA4F,EAAA,GAF1BlF,eAAe;AAmQrB,eAAeA,eAAe;AAAC,IAAAkF,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}